riot.tag2("su-checkbox",'<input type="checkbox" checked="{checked}" onclick="{click}" ref="target" disabled="{isDisabled()}" id="{getId()}"> <label if="{!opts.label}" for="{getId()}"><yield></yield></label> <label if="{opts.label}" for="{getId()}">{opts.label}</label>',"",'class="ui checkbox {opts.class}"',function(e){"use strict";var t=this;this.checked=!1;var i=void 0,n=void 0;this.on("mount",function(){o(),t.checked=l(),i=t.checked,n=t.checked,t.update()}),this.on("update",function(){o(),i!=t.checked?(e.checked=t.checked,i=t.checked,n=t.checked,s()):n!=l()&&(t.checked=l(),i=t.checked,n=t.checked,s())}),this.click=function(){a()||t.isDisabled()?event.preventDefault():(t.checked=!t.checked,s(),t.trigger("click",t.checked))},this.getId=function(){return"su-checkbox-"+t._riot_id},this.isDisabled=function(){return t.root.classList.contains("disabled")};var a=function(){return t.root.classList.contains("read-only")},s=function(){t.parent&&t.parent.update()},o=function(){void 0===e.check||t.shownMessage||(console.warn("'check' attribute is deprecated. Please use 'checked'."),e.checked=e.check,e.check=void 0,t.shownMessage=!0)},l=function(){return!0===e.checked||"checked"===e.checked||"true"===e.checked}}),riot.tag2("su-dropdown",'<i class="dropdown icon"></i> <input class="search" autocomplete="off" tabindex="{getTabindex()}" ref="condition" if="{opts.search}" oninput="{input}" onclick="{clickSearch}" onfocus="{open}" onblur="{blur}"> <a each="{item in opts.items}" class="ui label transition visible" style="display: inline-block !important;" if="{item.selected}"> {item.label} <i class="delete icon" onclick="{unselect}"></i> </a> <div class="{default: default} text {filtered: filtered}" if="{!opts.multiple || !selectedFlg}"> {label} </div> <div class="menu transition {transitionStatus}" onmousedown="{mousedown}" onmouseup="{mouseup}" onblur="{blur}" tabindex="-1"> <virtual each="{item in opts.items}"> <div class="item {default: item.default} {active: item.active} {selected: item.active}" if="{isVisible(item)}" riot-value="{item.value}" default="{item.default}" onclick="{itemClick}" onmousedown="{mousedown}" onmouseup="{mouseup}"> <i class="{item.icon} icon" if="{item.icon}"></i> <img class="ui avatar image" riot-src="{item.image}" if="{item.image}"> <span class="description" if="{item.description}">{item.description}</span> <span class="text">{item.label}</span> </div> <div class="header" if="{item.header && !filtered}"> <i class="{item.icon} icon" if="{item.icon}"></i> {item.label} </div> <div class="divider" if="{item.divider && !filtered}"></div> </virtual> <div class="message" if="{filtered && filteredItems.length == 0}">No results found.</div> </div>','su-dropdown.ui.dropdown .menu>.item.default,[data-is="su-dropdown"].ui.dropdown .menu>.item.default{ color: rgba(0, 0, 0, 0.4) }','class="ui selection {opts.class} {search: opts.search} {multiple: opts.multiple} dropdown {active: isActive()} {visible: isActive()}" onclick="{toggle}" onfocus="{open}" onblur="{blur}" onkeydown="{keydown}" onkeyup="{keyup}" tabindex="{opts.search ? -1 : getTabindex()}"',function(e){"use strict";var t=this;this.visibleFlg=!1,this.selectedFlg=!1,this.filtered=!1,this.transitionStatus="hidden",this.value="",this.label="",this.keys={enter:13,escape:27,upArrow:38,downArrow:40},e.items&&e.items.length>0&&(this.label=e.items[0].label,this.value=e.items[0].value,this.default=e.items[0].default),this.on("update",function(){if(e.multiple)e.items.forEach(function(e){return e.selected=!1}),e.items.filter(function(e){return t.value&&t.value.indexOf(e.value)>=0}).forEach(function(e){return e.selected=!0}),s(!0);else if(e.items){var i=e.items.filter(function(e){return e.value===t.value});if(i&&i.length>0){var n=i[0];t.label!==n.label&&a(n,!0)}else e.items&&e.items.length>0&&(t.value!=e.items[0].value&&(t.value=e.items[0].value),t.label!=e.items[0].label&&(t.label=e.items[0].label,t.default=e.items[0].default))}}),this.toggle=function(){t.visibleFlg?n():i()},this.mousedown=function(){t.itemActivated=!0},this.mouseup=function(){t.itemActivated=!1},this.blur=function(){t.itemActivated||n()},this.itemClick=function(t){if(t.stopPropagation(),e.multiple)return t.item.item.default||(t.item.item.selected=!0),void s();a(t.item.item),n()},this.keydown=function(a){var s=a.keyCode;if(s==t.keys.escape&&n(),s==t.keys.downArrow&&i(),s!=t.keys.upArrow&&s!=t.keys.downArrow)return!0;a.preventDefault();var o=e.items.filter(function(t){return!(e.search&&!t.searched)&&(!e.multiple||!t.default&&!t.selected)});if(0==o.length)return!0;if(o.every(function(e){return!e.active}))return o[0].active=!0,!0;var c=parseInt(o.map(function(e,t){return e.active?t:-1}).filter(function(e){return e>=0}));if(s==t.keys.upArrow){var r=o.filter(function(e,t){return t<c&&!e.header&&!e.divider});r.length>0&&(o[c].active=!1,r[r.length-1].active=!0)}else if(s==t.keys.downArrow){var u=o.filter(function(e,t){return t>c&&!e.header&&!e.divider});u.length>0&&(o[c].active=!1,u[0].active=!0)}t.update(),l()},this.keyup=function(i){if(i.keyCode==t.keys.enter){var o=e.items.filter(function(e){return e.searched&&!e.selected}),l=parseInt(o.map(function(e,t){return e.active?t:-1}).filter(function(e){return e>=0})),c=o[l];c&&(e.multiple?(c.selected=!0,c.active=!1,l<o.length-1?o[l+1].active=!0:l>0&&(o[l-1].active=!0),s()):(c.active=!1,a(c),n()))}},this.clickSearch=function(e){e.stopPropagation()},this.input=function(e){var i=e.target.value.toLowerCase();t.filtered=i.length>0,o(i)},this.unselect=function(i){i.stopPropagation(),i.item.item.selected=!1,t.value=e.items.filter(function(e){return e.selected}).map(function(e){return e.value}),t.selectedFlg=e.items.some(function(e){return e.selected}),c()};var i=function(){t.openning||t.closing||t.visibleFlg||(t.openning=!0,o(""),t.transitionStatus="visible animating in slide down",e.items.forEach(function(e){return e.active=!1}),setTimeout(function(){t.openning=!1,t.visibleFlg=!0,t.transitionStatus="visible",t.update()},300),e.search&&t.refs.condition.focus(),t.update(),l(),t.trigger("open"))},n=function(){!t.closing&&t.visibleFlg&&(t.closing=!0,t.transitionStatus="visible animating out slide down",setTimeout(function(){t.closing=!1,t.visibleFlg=!1,t.transitionStatus="hidden",t.update()},300),e.search&&(t.refs.condition.blur(),t.filtered&&t.filteredItems.length>0?a(t.filteredItems[0]):(t.refs.condition.value="",t.filtered=!1)),t.update(),t.trigger("close"))},a=function(i,n){t.value=i.value,t.label=i.label,t.default=i.default,e.search&&(t.refs.condition.value="",t.filtered=!1),n||t.update(),c(),t.trigger("select",i)},s=function(i){t.value=e.items.filter(function(e){return e.selected}).map(function(e){return e.value}),t.selectedFlg=e.items.some(function(e){return e.selected}),i||(t.update(),c()),t.trigger("select",e.items.filter(function(e){return e.selected}))},o=function(i){e.items.forEach(function(e){e.searched=e.label&&e.label.toLowerCase().indexOf(i)>=0}),t.filteredItems=e.items.filter(function(e){return e.searched}),t.update(),t.trigger("search")},l=function(){var e=t.root.querySelector(".menu"),i=t.root.querySelector(".item.active");if(e&&i){var n=e.scrollTop,a=i.offsetTop,s=parseInt(document.defaultView.getComputedStyle(i,null).height.replace("px","")),o=parseInt(document.defaultView.getComputedStyle(e,null).height.replace("px",""));(a<n||n+o<a+s)&&(e.scrollTop=a)}},c=function(){t.parent&&t.parent.update()};this.isVisible=function(t){return(!e.multiple||!t.default&&!t.selected)&&(t.searched&&!t.header&&!t.divider)},this.isActive=function(){return!t.closing&&(t.openning||t.visibleFlg)},this.getTabindex=function(){return e.tabindex?e.tabindex:0}}),riot.tag2("su-modal",'<div class="ui modal transition visible active {opts.class}"> <i class="close icon" if="{isFullscreen()}" onclick="{close}"></i> <div class="ui header {icon: opts.modal.heading.icon}"> <i class="icon {opts.modal.heading.icon}" if="{opts.modal.heading.icon}"></i> {(opts.modal.heading.text) ? opts.modal.heading.text : opts.modal.heading} </div> <div class="content {opts.modal.content_class}"> <yield></yield> </div> <div class="actions"> <div each="{opts.modal.buttons}" class="ui button {type} {labeled: icon && text} {icon: icon} {inverted: isBasic()}" onclick="{parent.click.bind(this, action)}"> {text} <i class="icon {icon}" if="{icon}"></i> </div> </div> </div>','su-modal.ui.dimmer.visible.transition,[data-is="su-modal"].ui.dimmer.visible.transition{ display: flex !important; align-items: center; justify-content: center; } su-modal .ui.modal,[data-is="su-modal"] .ui.modal{ top: auto; left: auto; position: relative; margin: 0 !important; }','class="ui dimmer modals page transition {transitionStatus}" onclick="{dimmerClose}"',function(e){"use strict";var t=this;this.on("mount",function(){e.modal||(e.modal={}),void 0===e.modal.closable&&(e.modal.closable=!0)}),this.on("update",function(){e.modal.visible&&(t.transitionStatus="animating fade in visible",setTimeout(function(){t.transitionStatus="visible",t.update()},500))}),this.click=function(e){t.close(e)},this.dimmerClose=function(i){e.modal.closable&&t.close(i)},this.close=function(i){i&&"function"===toString.call(i).slice(8,-1).toLowerCase()&&i(),e.modal.visible=!1,t.transitionStatus="animating fade out visible active",t.update(),setTimeout(function(){t.transitionStatus="hidden",t.update()},300)},this.isFullscreen=function(){return t.root.classList.contains("fullscreen")},this.isBasic=function(){return t.root.classList.contains("basic")}}),riot.tag2("su-radio",'<input type="radio" name="{name}" riot-value="{value}" checked="{checked}" onclick="{click}" ref="target" id="{getId()}"> <label if="{!opts.label}" for="{getId()}"><yield></yield></label> <label if="{opts.label}" for="{getId()}">{opts.label}</label>',"",'class="ui {radio: isRadio()} checkbox {opts.class}"',function(e){"use strict";var t=this;this.name="",this.checked=!1;var i=void 0,n=void 0;this.on("mount",function(){t.checked=!0===e.checked||"checked"===e.checked||"true"===e.checked,i=t.checked,n=e.checked,t.update()}),this.on("update",function(){t.name=e.name,t.value=e.value,i!=t.checked?(e.checked=t.checked,i=t.checked):n!=e.checked&&(t.checked=e.checked,n=e.checked)}),this.click=function(e){a()||t.isDisabled()?e.preventDefault():(t.checked=e.target.checked,t.trigger("click",e.target.value))};var a=function(){return t.root.classList.contains("read-only")};this.getId=function(){return"su-radio-"+t._riot_id},this.isDisabled=function(){return t.root.classList.contains("disabled")},this.isRadio=function(){return!t.root.classList.contains("slider")}}),riot.tag2("su-radio-group","<yield></yield>","","",function(e){"use strict";var t=this;this.label="",this.value="";var i=void 0,n=void 0;this.on("mount",function(){void 0===e.riotValue&&void 0!==e.value&&(e.riotValue=e.value),t.value=e.riotValue,i=t.value,n=t.value;var a=t.tags["su-radio"];if(Array.isArray(a))for(var o=a,l=Array.isArray(o),c=0,o=l?o:o[Symbol.iterator]();;){var r;if(l){if(c>=o.length)break;r=o[c++]}else{if((c=o.next()).done)break;r=c.value}s(r)}else s(a);t.update()}),this.on("update",function(){var s=!1;i!=t.value?(e.riotValue=t.value,n=t.value,i=t.value,s=!0):n!=e.riotValue&&(t.value=e.riotValue,n=e.riotValue,i=e.riotValue,s=!0);var o=t.tags["su-radio"];if(Array.isArray(o))for(var l=o,c=Array.isArray(l),r=0,l=c?l:l[Symbol.iterator]();;){var u;if(c){if(r>=l.length)break;u=l[r++]}else{if((r=l.next()).done)break;u=r.value}a(u)}else a(o);s&&t.trigger("change",t.value)});var a=function(e){void 0!==e.opts.value&&(e.checked=t.value==e.opts.value,e.checked&&(t.label=e.root.getElementsByTagName("label")[0].innerText))},s=function(e){e.opts.name=o(),e.on("click",function(e){t.value=e,t.update()})},o=function(){return"su-radio-name-"+t._riot_id}});