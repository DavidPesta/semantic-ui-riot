riot.tag2("su-checkbox",'<div class="ui checkbox {opts.class}"> <input type="checkbox" checked="{checked}" onclick="{click}" ref="target"> <label onclick="{labelClick}"><yield></yield></label> </div>',"","",function(e){"use strict";var i=this;this.checked=!1,this.on("mount",function(){i.checked=e.checked,i.update(),i.parent.update()}),this.click=function(t){i.checked=t.target.checked,i.parent.update(),e.action&&e.action()},this.labelClick=function(){i.refs.target.click()}}),riot.tag2("su-radio",'<div class="ui {radio: isRadio()} checkbox {opts.class}"> <input type="radio" name="{name}" riot-value="{value}" checked="{checked}" onclick="{click}" ref="target"> <label onclick="{labelClick}"><yield></yield></label> </div>',"","",function(e){"use strict";var i=this;this.checked=!1,this.name="",this.on("mount",function(){e.radio||(e.radio={checked:!1}),e.checked&&(e.radio.checked=e.checked),e.action&&(e.radio.action=e.action),e.name&&(e.radio.name=e.name),e.value&&(e.radio.value=e.value),i.checked=e.radio.checked,i.name=e.radio.name,i.value=e.radio.value,i.update(),i.parent.update()}),this.click=function(t){i.checked=t.target.checked,i.parent.update(),e.radio.action&&e.radio.action(t.target.value)},this.labelClick=function(){self.refs.target.click()},this.isRadio=function(){return!i.root.classList.contains("slider")}}),riot.tag2("su-dropdown",'<div class="ui selection {opts.class} {search: opts.search} {multiple: opts.multiple} dropdown {active: visibleFlg} {visible: visibleFlg}" onclick="{click}"> <i class="dropdown icon"></i> <input class="search" autocomplete="off" tabindex="0" ref="condition" if="{opts.search}" onkeydown="{keydown}" onkeyup="{keyup}"> <a each="{item in opts.items}" class="ui label transition visible" style="display: inline-block !important;" if="{item.selected}"> {item.label} <i class="delete icon" onclick="{unselect}"></i> </a> <div class="{default: default} text {filtered: filtered}" if="{!opts.multiple || !selectedFlg}"> {label} </div> <div class="menu transition {transitionStatus}" tabindex="-1"> <virtual each="{item in opts.items}"> <div class="item {default: item.default}" if="{isVisible(item)}" riot-value="{item.value}" default="{item.default}" onclick="{itemClick}"> <i class="{item.icon} icon" if="{item.icon}"></i> <img class="ui avatar image" riot-src="{item.image}" if="{item.image}"> <span class="description" if="{item.description}">{item.description}</span> <span class="text">{item.label}</span> </div> <div class="header" if="{item.header && !filtered}"> <i class="{item.icon} icon" if="{item.icon}"></i> {item.label} </div> <div class="divider" if="{item.divider && !filtered}"></div> </virtual> <div class="message" if="{filtered && filteredItems.length == 0}">No results found.</div> </div> </div>','su-dropdown .ui.dropdown .menu>.item.default,[data-is="su-dropdown"] .ui.dropdown .menu>.item.default{ color: rgba(0, 0, 0, 0.4) }',"",function(e){"use strict";var i=this;this.visibleFlg=!1,this.selectedFlg=!1,this.filtered=!1,this.value="",this.label="",this.on("mount",function(){e.items&&e.items.length>0&&(i.label=e.items[0].label,i.value=e.items[0].value,i.default=e.items[0].default),document.addEventListener("click",i.handleClickOutside),i.update(),i.parent.update()}),this.on("unmount",function(){document.removeEventListener("click",i.handleClickOutside)}),this.on("update",function(){if(e.multiple)e.items.forEach(function(e){return e.selected=!1}),e.items.filter(function(e){return i.value&&i.value.indexOf(e.value)>=0}).forEach(function(e){return e.selected=!0}),i.selectMultiTarget(!0);else{var t=e.items.filter(function(e){return e.value===i.value});if(t&&t.length>0){var a=t[0];i.label!==a.label&&i.selectTarget(a,!0)}else e.items&&e.items.length>0&&(i.value!=e.items[0].value&&(i.value=e.items[0].value),i.label!=e.items[0].label&&(i.label=e.items[0].label,i.default=e.items[0].default))}}),this.click=function(){i.visibleFlg=!i.visibleFlg,i.visibleFlg?i.open():i.close()},this.itemClick=function(t){if(t.stopPropagation(),e.multiple)return t.item.item.default||(t.item.item.selected=!0),void i.selectMultiTarget();i.selectTarget({value:t.target.value,label:t.target.textContent,default:t.target.attributes.default}),i.close()},this.handleClickOutside=function(e){!i.root.contains(e.target)&&i.visibleFlg&&i.close()},this.keydown=function(){i.filtered=!0,i.update()},this.keyup=function(e){var t=e.target.value.toLowerCase();i.filtered=t.length>0,i.search(t)},this.unselect=function(t){t.stopPropagation(),t.item.item.selected=!1,i.value=e.items.filter(function(e){return e.selected}).map(function(e){return e.value}),i.selectedFlg=e.items.some(function(e){return e.selected}),i.parent.update()},this.open=function(){i.search(""),i.transitionStatus="visible animating in slide down",setTimeout(function(){i.transitionStatus="visible",i.update()},300),e.search&&i.refs.condition.focus(),i.update()},this.close=function(){i.visibleFlg=!1,i.transitionStatus="visible animating out slide down",setTimeout(function(){i.transitionStatus="hidden",i.update()},300),e.search&&(i.refs.condition.blur(),i.filtered&&i.filteredItems.length>0?i.selectTarget(i.filteredItems[0]):(i.refs.condition.value="",i.filtered=!1)),i.update()},this.selectTarget=function(t,a){i.value=t.value,i.label=t.label,i.default=t.default,e.search&&(i.refs.condition.value="",i.filtered=!1),a||i.update(),i.parent.update(),e.action&&e.action()},this.selectMultiTarget=function(t){i.value=e.items.filter(function(e){return e.selected}).map(function(e){return e.value}),i.selectedFlg=e.items.some(function(e){return e.selected}),t||(i.update(),i.parent.update())},this.search=function(t){e.items.forEach(function(e){e.searched=e.label&&e.label.toLowerCase().indexOf(t)>=0}),i.filteredItems=e.items.filter(function(e){return e.searched}),i.update()},this.isVisible=function(i){return(!e.multiple||!i.default&&!i.selected)&&(i.searched&&!i.header&&!i.divider)}}),riot.tag2("su-modal",'<div class="ui dimmer modals page transition {transitionStatus}" onclick="{dimmerClose}"> <div class="ui modal transition visible active {opts.class}"> <i class="close icon" if="{isFullscreen()}" onclick="{close}"></i> <div class="ui header {icon: opts.modal.heading.icon}"> <i class="icon {opts.modal.heading.icon}" if="{opts.modal.heading.icon}"></i> {(opts.modal.heading.text) ? opts.modal.heading.text : opts.modal.heading} </div> <div class="content {opts.modal.content_class}"> <yield></yield> </div> <div class="actions"> <div each="{opts.modal.buttons}" class="ui button {type} {labeled: icon && text} {icon: icon} {inverted: isBasic()}" onclick="{parent.click.bind(this, action)}"> {text} <i class="icon {icon}" if="{icon}"></i> </div> </div> </div> </div>','su-modal .ui.dimmer.visible.transition,[data-is="su-modal"] .ui.dimmer.visible.transition{ display: flex !important; align-items: center; justify-content: center; } su-modal .ui.modal,[data-is="su-modal"] .ui.modal{ top: auto; left: auto; position: relative; margin: 0 !important; }',"",function(e){"use strict";var i=this;this.on("mount",function(){e.modal||(e.modal={}),void 0===e.modal.closable&&(e.modal.closable=!0)}),this.on("update",function(){e.modal.visible&&(i.transitionStatus="animating fade in visible",setTimeout(function(){i.transitionStatus="visible",i.update()},500))}),this.click=function(e){i.close(e)},this.dimmerClose=function(t){e.modal.closable&&i.close(t)},this.close=function(t){t&&"function"===toString.call(t).slice(8,-1).toLowerCase()&&t(),e.modal.visible=!1,i.transitionStatus="animating fade out visible active",i.update(),setTimeout(function(){i.transitionStatus="hidden",i.update()},300)},this.isFullscreen=function(){return i.root.classList.contains("fullscreen")},this.isBasic=function(){return i.root.classList.contains("basic")}});