riot.tag2("su-checkbox",'<div class="ui checkbox {type}"> <input type="checkbox" checked="{checked}" onclick="{click}" ref="target"> <label onclick="{labelClick}"><yield></yield></label> </div>',"","",function(i){"use strict";var e=this,t=this;this.checked=!1,this.type="",this.on("mount",function(){i.checkbox||(i.checkbox={checked:!1}),i.type&&(i.checkbox.type=i.type),i.checked&&(i.checkbox.checked=i.checked),i.action&&(i.checkbox.action=i.action),t.type=i.checkbox.type,t.checked=i.checkbox.checked,e.update(),e.parent.update()}),this.click=function(e){t.checked=e.target.checked,t.parent.update(),i.checkbox.action&&i.checkbox.action()},this.labelClick=function(){t.refs.target.click()}}),riot.tag2("su-radio",'<div class="ui {radio: isRadio()} checkbox {type}"> <input type="radio" name="{name}" riot-value="{value}" checked="{checked}" onclick="{click}" ref="target"> <label onclick="{labelClick}"><yield></yield></label> </div>',"","",function(i){"use strict";var e=this,t=this;this.checked=!1,this.type="",this.name="",this.on("mount",function(){i.radio||(i.radio={checked:!1}),i.type&&(i.radio.type=i.type),i.checked&&(i.radio.checked=i.checked),i.action&&(i.radio.action=i.action),i.name&&(i.radio.name=i.name),i.value&&(i.radio.value=i.value),t.type=i.radio.type,t.checked=i.radio.checked,t.name=i.radio.name,t.value=i.radio.value,e.update(),e.parent.update()}),this.isRadio=function(){return!t.type||!t.type.split(" ").every(function(i){return"slider"===i})},this.click=function(e){t.checked=e.target.checked,t.parent.update(),i.radio.action&&i.radio.action(e.target.value)},this.labelClick=function(){t.refs.target.click()}}),riot.tag2("su-dropdown",'<div class="ui selection dropdown {active: visible} {visible: visible}" onclick="{click}" onblur="{blur}"> <i class="dropdown icon"></i> <div class="{default: default} text"> {label} </div> <div class="menu transition {visible: visible}" tabindex="-1"> <div class="item {default: item.default}" each="{item in items}" riot-value="{item.value}" default="{item.default}" onclick="{itemClick}"> {item.label} </div> </div> </div>','su-dropdown .ui.dropdown .menu>.item.default,[data-is="su-dropdown"] .ui.dropdown .menu>.item.default{ color: rgba(0, 0, 0, 0.4) }',"",function(i){"use strict";var e=this,t=this;this.visible=!1,this.value="",this.label="",this.items=[],this.on("mount",function(){i.dropdown||(i.dropdown={}),i.items&&(i.dropdown.items=i.items),i.action&&(i.dropdown.action=i.action),e.items=i.dropdown.items,e.label=e.items[0].label,e.value=e.items[0].value,e.default=e.items[0].default,e.update()}),this.click=function(){e.visible=!e.visible,e.update()},this.itemClick=function(c){t.value=c.target.value,t.label=c.target.textContent,t.default=c.target.attributes.default,e.update(),t.parent.update(),i.dropdown.action&&i.dropdown.action()},this.blur=function(){e.visibile=!1}}),riot.tag2("su-modal",'<div class="ui dimmer modals page transition visible active" if="{opts.modal.visible}" onclick="{dimmerClose}"></div> <div class="ui modal transition visible active {modal_type}" if="{opts.modal.visible}"> <i class="close icon" if="{modal_type == \'fullscreen\'}" onclick="{close}"></i> <div class="ui header {icon: opts.modal.heading.icon}"> <i class="icon {opts.modal.heading.icon}" if="{opts.modal.heading.icon}"></i> {(opts.modal.heading.text) ? opts.modal.heading.text : opts.modal.heading} </div> <div class="content {opts.modal.content_type}"> <yield></yield> </div> <div class="actions"> <div each="{opts.modal.buttons}" class="ui button {type} {labeled: icon && text} {icon: icon} {inverted: modal_type == \'basic\'}" onclick="{action}"> {text} <i class="icon {icon}" if="{icon}"></i> </div> </div> </div>',"","",function(i){"use strict";var e=this;this.on("mount",function(){i.modal||(i.modal={}),e.modal_type=i.modal.type}),this.dimmerClose=function(){i.modal.closable&&(i.modal.visible=!1,e.trigger("close"))},this.close=function(){i.modal.visible=!1,e.trigger("close")}});