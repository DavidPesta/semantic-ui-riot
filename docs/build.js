(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

riot.tag2("app", '<div class="ui inverted vertical left fixed menu"> <div class="item"> <strong>Semantic UI Riot <small><em>{version}</em></small> </strong> </div> <div class="item"> <div class="header">Getting Started</div> <div class="menu"> <a class="item" href="#">Introduction</a> <a href="https://github.com/black-trooper/semantic-ui-riot" class="item"> <i aria-hidden="true" class="github icon"></i> GitHub </a> </div> </div> <div class="item"> <div class="header">Module</div> <div class="menu"> <a class="item" href="#demo-checkbox">Checkbox</a> <a class="item" href="#demo-dropdown">Dropdown</a> <a class="item" href="#demo-modal">Modal</a> </div> </div> </div> <div style="margin-left:15.5rem"> <div class="ui padded one column grid"> <div class="column"> <content></content> </div> </div> </div>', "", "", function (e) {
  "use strict";
  this.version = require("../package.json").version, route("", function () {
    riot.mount("content", "root");
  }), route(function (e) {
    riot.mount("content", e);
  }), route.start(!0);
}), riot.tag2("demo-checkbox", '<h1 class="ui header"> Checkbox <div class="sub header">A checkbox allows a user to select a value from a small set of options, often binary</div> </h1> <h2 class="ui dividing header">Types<a class="anchor" id="types"></a></h2> <h3 class="ui header">Checkbox</h3> <p>A standard checkbox</p> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 1)}"></i> </div> <div class="ui segment {bottom: !example[1]} attached"> <su-checkbox> Make my profile visible </su-checkbox> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[1]} "> <pre><code class="prettyprint">&lt;su-checkbox&gt;\n  Make my profile visible\n&lt;/su-checkbox&gt;\n</code></pre> </div> <h3 class="ui header">Radio</h3> <p>A checkbox can be formatted as a radio element. This means it is an exclusive option.</p> <div class="ui segment secondary top attached example"> Example <i class="icon code link" onclick="{toggleExample.bind(this, 2)}"></i> </div> <div class="ui segment {bottom: !example[2]} attached"> <su-radio name="radio1" action="{radioClick}" value="1" checked="{radio1 == 1}"> Radio choice1 </su-radio> <su-radio name="radio1" action="{radioClick}" value="2" checked="{radio1 == 2}"> Radio choice2 </su-radio> <span class=" ui tag label">Radio choice{radio1}</span> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[2]}"> <pre><code class="prettyprint">&lt;su-radio name=&quot;radio&quot; action=&quot;\\{ radioClick \\}&quot; value=&quot;1&quot; checked=&quot;\\{ myradio == 1 \\}&quot;&gt;\n  Radio choice1\n&lt;/su-radio&gt;\n&lt;su-radio name=&quot;radio&quot; action=&quot;\\{ radioClick \\}&quot; value=&quot;2&quot; checked=&quot;\\{ myradio == 2 \\}&quot;&gt;\n  Radio choice2\n&lt;/su-radio&gt;\n\n&lt;!-- radio state example --&gt;\n&lt;span class=&quot;ui tag label&quot;&gt;Radio choice\\{ myradio \\}&lt;/span&gt;\n\n&lt;script&gt;\n  this.myradio = 1\n  this.radioClick = val =&gt; \\{\n    this.myradio = val\n    this.update()\n  \\}\n&lt;/script&gt;\n</code></pre> </div> <h3 class="ui header">Slider</h3> <p>A checkbox can be formatted to emphasize the current selection state</p> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 3)}"></i> </div> <div class="ui segment {bottom: !example[3]} attached"> <su-checkbox class="slider"> Accept terms and conditions </su-checkbox> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[3]}"> <pre><code class="prettyprint">&lt;su-checkbox class=&quot;slider&quot;&gt;\n  Accept terms and conditions\n&lt;/su-checkbox&gt;\n</code></pre> </div> <p>A checkbox can be formatted to emphasize the current selection state</p> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 4)}"></i> </div> <div class="ui segment {bottom: !example[4]} attached"> <div class="ui form"> <div class="grouped fields"> <label>Outbound Throughput</label> <div class="field"> <su-radio class="slider" name="throughput"> 20 mbps max </su-radio> </div> <div class="field"> <su-radio class="slider" name="throughput"> 10mbps max </su-radio> </div> <div class="field"> <su-radio class="slider" name="throughput"> 5mbps max </su-radio> </div> <div class="field"> <su-radio class="slider" name="throughput"> Unmetered </su-radio> </div> </div> </div> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[4]} "> <pre><code class="prettyprint">&lt;div class=&quot;ui form&quot;&gt;\n  &lt;div class=&quot;grouped fields&quot;&gt;\n    &lt;label&gt;Outbound Throughput&lt;/label&gt;\n    &lt;div class=&quot;field&quot;&gt;\n      &lt;su-radio class=&quot;slider&quot; name=&quot;throughput&quot;&gt;\n        20 mbps max\n      &lt;/su-radio&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;field&quot;&gt;\n      &lt;su-radio class=&quot;slider&quot; name=&quot;throughput&quot;&gt;\n        10mbps max\n      &lt;/su-radio&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;field&quot;&gt;\n      &lt;su-radio class=&quot;slider&quot; name=&quot;throughput&quot;&gt;\n        5mbps max\n      &lt;/su-radio&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;field&quot;&gt;\n      &lt;su-radio class=&quot;slider&quot; name=&quot;throughput&quot;&gt;\n        Unmetered\n      &lt;/su-radio&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre> </div> <h2 class="ui dividing header">Named elements<a class="anchor" id="event"></a></h2> <h3 class="ui header">Checkbox</h3> <p>Access to checkbox with ref attribute</p> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 5)}"></i> </div> <div class="ui segment {bottom: !example[5]} attached"> <su-checkbox ref="checkbox1" checked="true"> Make my profile visible </su-checkbox> <div class="ui message"> <div class="header"> Checked from refs </div> <p>{refs.checkbox1.checked ? \'on\' : \'off\'}</p> </div> <button type="button" click="{setRefValue.bind(this, true)}" class="ui button">Check on</button> <button type="button" click="{setRefValue.bind(this, false)}" class="ui button">Check off</button> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[5]} "> <pre><code class="prettyprint">&lt;su-checkbox ref=&quot;checkbox1&quot; checked=&quot;true&quot;&gt;\n  Make my profile visible\n&lt;/su-checkbox&gt;\n\n&lt;div class=&quot;ui message&quot;&gt;\n  &lt;div class=&quot;header&quot;&gt;\n    Checked\n  &lt;/div&gt;\n  &lt;p&gt;\\{ refs.checkbox1.checked ? &#39;on&#39; : &#39;off&#39; \\}&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;button type=&quot;button&quot; click=&quot;\\{ setRefValue.bind(this, true) \\}&quot; class=&quot;ui button&quot;&gt;Check on&lt;/button&gt;\n&lt;button type=&quot;button&quot; click=&quot;\\{ setRefValue.bind(this, false) \\}&quot; class=&quot;ui button&quot;&gt;Check off&lt;/button&gt;\n\n&lt;script&gt;\n  this.setRefValue = value =&gt; \\{\n    this.refs.checkbox1.checked = value\n  \\}\n&lt;/script&gt;\n</code></pre> </div>', "", "", function (e) {
  "use strict";
  var a = this;this.example = [], this.toggleExample = function (e) {
    a.example[e] = !a.example[e];
  }, this.results = [], this.radio1 = 1, this.radioClick = function (e) {
    a.radio1 = e, a.update();
  }, this.setRefValue = function (e) {
    a.refs.checkbox1.checked = e;
  }, this.on("mount", function () {
    PR.prettyPrint(!1);
  });
}), riot.tag2("demo-dropdown", '<h1 class="ui header"> Dropdown <div class="sub header">A dropdown allows a user to select a value from a series of options</div> </h1> <h2 class="ui dividing header">Types<a class="anchor" id="types"></a></h2> <h3 class="ui header">Selection</h3> <p>A dropdown can be used to select between choices in a form</p> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 0)}"></i> </div> <div class="ui segment {bottom: !example[0]} attached"> <su-dropdown items="{dropdownItems}"></su-dropdown> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[0]} "> <pre><code class="prettyprint">&lt;su-dropdown items=&quot;\\{ dropdownItems \\}&quot;&gt;&lt;/su-dropdown&gt;\n\n&lt;script&gt;\n  this.dropdownItems = [\n    \\{\n      label: &#39;Gender&#39;,\n      value: null,\n      default: true\n    \\},\n    \\{\n      label: &#39;Male&#39;,\n      value: 1\n    \\},\n    \\{\n      label: &#39;Female&#39;,\n      value: 2\n    \\},\n  ]\n&lt;/script&gt;\n</code></pre> </div> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 8)}"></i> </div> <div class="ui segment {bottom: !example[8]} attached"> <su-dropdown items="{dropdownItems9}" class="fluid"></su-dropdown> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[8]} "> <pre><code class="prettyprint">&lt;su-dropdown items=&quot;\\{ dropdownItems \\}&quot; class=&quot;fluid&quot; &gt;&lt;/su-dropdown&gt;\n\n&lt;script&gt;\n  this.dropdownItems = [\n    \\{\n      label: &#39;Select Friend&#39;,\n      value: null,\n      default: true\n    \\},\n    \\{\n      label: &#39;Jenny Hess&#39;,\n      image: &#39;./images/avatar/small/jenny.jpg&#39;,\n      value: &#39;jenny&#39;\n    \\},\n    \\{\n      label: &#39;Elliot Fu&#39;,\n      image: &#39;./images/avatar/small/elliot.jpg&#39;,\n      value: &#39;elliot&#39;\n    \\},\n    \\{\n      label: &#39;Stevie Feliciano&#39;,\n      image: &#39;./images/avatar/small/stevie.jpg&#39;,\n      value: &#39;stevie&#39;\n    \\},\n    \\{\n      label: &#39;Christian&#39;,\n      image: &#39;./images/avatar/small/christian.jpg&#39;,\n      value: &#39;christian&#39;\n    \\},\n    \\{\n      label: &#39;Matt&#39;,\n      image: &#39;./images/avatar/small/matt.jpg&#39;,\n      value: &#39;matt&#39;\n    \\},\n    \\{\n      label: &#39;Justen Kitsune&#39;,\n      image: &#39;./images/avatar/small/justen.jpg&#39;,\n      value: &#39;justen&#39;\n    \\}\n  ]\n&lt;/script&gt;\n</code></pre> </div> <h3 class="ui header">Search Selection</h3> <p>A selection dropdown can allow a user to search through a large list of choices.</p> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 1)}"></i> </div> <div class="ui segment {bottom: !example[1]} attached"> <su-dropdown items="{dropdownItems2}" search="true"></su-dropdown> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[1]} "> <pre><code class="prettyprint">&lt;su-dropdown items=&quot;\\{ dropdownItems \\}&quot; search=&quot;true&quot;&gt;&lt;/su-dropdown&gt;\n\n&lt;script&gt;\n  this.dropdownItems = [\n    \\{\n      label: &#39;State&#39;,\n      value: null,\n      default: true\n    \\},\n    \\{ value: &#39;AL&#39;, label: &#39;Alabama&#39; \\},\n    \\{ value: &#39;AK&#39;, label: &#39;Alaska&#39; \\},\n    \\{ value: &#39;AZ&#39;, label: &#39;Arizona&#39; \\},\n    \\{ value: &#39;AR&#39;, label: &#39;Arkansas&#39; \\},\n    \\{ value: &#39;CA&#39;, label: &#39;California&#39; \\},\n    \\{ value: &#39;CO&#39;, label: &#39;Colorado&#39; \\},\n    \\{ value: &#39;CT&#39;, label: &#39;Connecticut&#39; \\},\n    \\{ value: &#39;DE&#39;, label: &#39;Delaware&#39; \\},\n    \\{ value: &#39;DC&#39;, label: &#39;District Of Columbia&#39; \\},\n    \\{ value: &#39;FL&#39;, label: &#39;Florida&#39; \\},\n    \\{ value: &#39;GA&#39;, label: &#39;Georgia&#39; \\},\n    \\{ value: &#39;HI&#39;, label: &#39;Hawaii&#39; \\},\n    \\{ value: &#39;ID&#39;, label: &#39;Idaho&#39; \\},\n    \\{ value: &#39;IL&#39;, label: &#39;Illinois&#39; \\},\n    \\{ value: &#39;IN&#39;, label: &#39;Indiana&#39; \\},\n    \\{ value: &#39;IA&#39;, label: &#39;Iowa&#39; \\},\n    \\{ value: &#39;KS&#39;, label: &#39;Kansas&#39; \\},\n    \\{ value: &#39;KY&#39;, label: &#39;Kentucky&#39; \\},\n    \\{ value: &#39;LA&#39;, label: &#39;Louisiana&#39; \\},\n    \\{ value: &#39;ME&#39;, label: &#39;Maine&#39; \\},\n    \\{ value: &#39;MD&#39;, label: &#39;Maryland&#39; \\},\n    \\{ value: &#39;MA&#39;, label: &#39;Massachusetts&#39; \\},\n    \\{ value: &#39;MI&#39;, label: &#39;Michigan&#39; \\},\n    \\{ value: &#39;MN&#39;, label: &#39;Minnesota&#39; \\},\n    \\{ value: &#39;MS&#39;, label: &#39;Mississippi&#39; \\},\n    \\{ value: &#39;MO&#39;, label: &#39;Missouri&#39; \\},\n    \\{ value: &#39;MT&#39;, label: &#39;Montana&#39; \\},\n    \\{ value: &#39;NE&#39;, label: &#39;Nebraska&#39; \\},\n    \\{ value: &#39;NV&#39;, label: &#39;Nevada&#39; \\},\n    \\{ value: &#39;NH&#39;, label: &#39;New Hampshire&#39; \\},\n    \\{ value: &#39;NJ&#39;, label: &#39;New Jersey&#39; \\},\n    \\{ value: &#39;NM&#39;, label: &#39;New Mexico&#39; \\},\n    \\{ value: &#39;NY&#39;, label: &#39;New York&#39; \\},\n    \\{ value: &#39;NC&#39;, label: &#39;North Carolina&#39; \\},\n    \\{ value: &#39;ND&#39;, label: &#39;North Dakota&#39; \\},\n    \\{ value: &#39;OH&#39;, label: &#39;Ohio&#39; \\},\n    \\{ value: &#39;OK&#39;, label: &#39;Oklahoma&#39; \\},\n    \\{ value: &#39;OR&#39;, label: &#39;Oregon&#39; \\},\n    \\{ value: &#39;PA&#39;, label: &#39;Pennsylvania&#39; \\},\n    \\{ value: &#39;RI&#39;, label: &#39;Rhode Island&#39; \\},\n    \\{ value: &#39;SC&#39;, label: &#39;South Carolina&#39; \\},\n    \\{ value: &#39;SD&#39;, label: &#39;South Dakota&#39; \\},\n    \\{ value: &#39;TN&#39;, label: &#39;Tennessee&#39; \\},\n    \\{ value: &#39;TX&#39;, label: &#39;Texas&#39; \\},\n    \\{ value: &#39;UT&#39;, label: &#39;Utah&#39; \\},\n    \\{ value: &#39;VT&#39;, label: &#39;Vermont&#39; \\},\n    \\{ value: &#39;VA&#39;, label: &#39;Virginia&#39; \\},\n    \\{ value: &#39;WA&#39;, label: &#39;Washington&#39; \\},\n    \\{ value: &#39;WV&#39;, label: &#39;West Virginia&#39; \\},\n    \\{ value: &#39;WI&#39;, label: &#39;Wisconsin&#39; \\},\n    \\{ value: &#39;WY&#39;, label: &#39;Wyoming&#39; \\}\n  ]\n&lt;/script&gt;\n</code></pre> </div> <h3 class="ui header">Multiple Selection</h3> <p>A selection dropdown can allow multiple selections</p> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 7)}"></i> </div> <div class="ui segment {bottom: !example[7]} attached"> <su-dropdown items="{dropdownItems8}" multiple="true"></su-dropdown> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[7]} "> <pre><code class="prettyprint">&lt;su-dropdown items=&quot;\\{ dropdownItems \\}&quot; multiple=&quot;true&quot;&gt;&lt;/su-dropdown&gt;\n\n&lt;script&gt;\n  this.dropdownItems = [\n    \\{\n      label: &#39;Skills&#39;,\n      value: null,\n      default: true\n    \\},\n    \\{ value: &#39;angular&#39;, label: &#39;Angular&#39; \\},\n    \\{ value: &#39;css&#39;, label: &#39;CSS&#39; \\},\n    \\{ value: &#39;design&#39;, label: &#39;Graphic Design&#39; \\},\n    \\{ value: &#39;ember&#39;, label: &#39;Ember&#39; \\},\n    \\{ value: &#39;html&#39;, label: &#39;HTML&#39; \\},\n    \\{ value: &#39;ia&#39;, label: &#39;Information Architecture&#39; \\},\n    \\{ value: &#39;javascript&#39;, label: &#39;Javascript&#39; \\},\n    \\{ value: &#39;mech&#39;, label: &#39;Mechanical Engineering&#39; \\},\n    \\{ value: &#39;meteor&#39;, label: &#39;Meteor&#39; \\},\n    \\{ value: &#39;node&#39;, label: &#39;NodeJS&#39; \\},\n    \\{ value: &#39;plumbing&#39;, label: &#39;Plumbing&#39; \\},\n    \\{ value: &#39;python&#39;, label: &#39;Python&#39; \\},\n    \\{ value: &#39;rails&#39;, label: &#39;Rails&#39; \\},\n    \\{ value: &#39;react&#39;, label: &#39;React&#39; \\},\n    \\{ value: &#39;repair&#39;, label: &#39;Kitchen Repair&#39; \\},\n    \\{ value: &#39;ruby&#39;, label: &#39;Ruby&#39; \\},\n    \\{ value: &#39;ui&#39;, label: &#39;UI Design&#39; \\},\n    \\{ value: &#39;ux&#39;, label: &#39;User Experience&#39; \\}\n  ]\n&lt;/script&gt;\n</code></pre> </div> <h2 class="ui dividing header">Content<a class="anchor" id="content"></a></h2> <h3 class="ui header">Header</h3> <p>A dropdown menu can contain a header</p> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 2)}"></i> </div> <div class="ui segment {bottom: !example[2]} attached"> <su-dropdown items="{dropdownItems3}"></su-dropdown> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[2]} "> <pre><code class="prettyprint">&lt;su-dropdown items=&quot;\\{ dropdownItems \\}&quot;&gt;&lt;/su-dropdown&gt;\n\n&lt;script&gt;\n  this.dropdownItems = [\n    \\{\n      label: &#39;Filter&#39;,\n      value: null,\n      default: true\n    \\},\n    \\{\n      label: &#39;Filter by tag&#39;,\n      icon: &#39;tags&#39;,\n      header: true\n    \\},\n    \\{\n      label: &#39;Important&#39;,\n      value: 1\n    \\},\n    \\{\n      label: &#39;Announcement&#39;,\n      value: 2\n    \\},\n    \\{\n      label: &#39;Discussion&#39;,\n      value: 3\n    \\}\n  ]\n&lt;/script&gt;\n</code></pre> </div> <h3 class="ui header">Divider</h3> <p>A dropdown menu can contain dividers to separate related content</p> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 3)}"></i> </div> <div class="ui segment {bottom: !example[3]} attached"> <su-dropdown items="{dropdownItems4}"></su-dropdown> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[3]} "> <pre><code class="prettyprint">&lt;su-dropdown items=&quot;\\{ dropdownItems \\}&quot;&gt;&lt;/su-dropdown&gt;\n\n&lt;script&gt;\n  this.dropdownItems = [\n    \\{\n      label: &#39;Filter&#39;,\n      value: null,\n      default: true\n    \\},\n    \\{\n      label: &#39;Filter by tag&#39;,\n      icon: &#39;tags&#39;,\n      header: true\n    \\},\n    \\{\n      divider: true\n    \\},\n    \\{\n      label: &#39;Important&#39;,\n      value: 1\n    \\},\n    \\{\n      label: &#39;Announcement&#39;,\n      value: 2\n    \\},\n    \\{\n      label: &#39;Discussion&#39;,\n      value: 3\n    \\}\n  ]\n&lt;/script&gt;\n</code></pre> </div> <h3 class="ui header">Icon</h3> <p>A dropdown menu can contain an <a href="https://semantic-ui.com/elements/icon.html">icon</a>.</p> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 4)}"></i> </div> <div class="ui segment {bottom: !example[4]} attached"> <su-dropdown items="{dropdownItems5}"></su-dropdown> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[4]} "> <pre><code class="prettyprint">&lt;su-dropdown items=&quot;\\{ dropdownItems \\}&quot;&gt;&lt;/su-dropdown&gt;\n\n&lt;script&gt;\n  this.dropdownItems = [\n    \\{\n      label: &#39;Filter&#39;,\n      value: null,\n      default: true\n    \\},\n    \\{\n      label: &#39;Filter by tag&#39;,\n      icon: &#39;tags&#39;,\n      header: true\n    \\},\n    \\{\n      divider: true\n    \\},\n    \\{\n      label: &#39;Important&#39;,\n      icon: &#39;attention&#39;,\n      value: 1\n    \\},\n    \\{\n      label: &#39;Announcement&#39;,\n      icon: &#39;comment&#39;,\n      value: 2\n    \\},\n    \\{\n      label: &#39;Discussion&#39;,\n      icon: &#39;conversation&#39;,\n      value: 3\n    \\}\n  ]\n&lt;/script&gt;\n</code></pre> </div> <h3 class="ui header">Description</h3> <p>A dropdown menu can contain a description.</p> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 5)}"></i> </div> <div class="ui segment {bottom: !example[5]} attached"> <su-dropdown items="{dropdownItems6}"></su-dropdown> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[5]} "> <pre><code class="prettyprint">&lt;su-dropdown items=&quot;\\{ dropdownItems \\}&quot;&gt;&lt;/su-dropdown&gt;\n\n&lt;script&gt;\n  this.dropdownItems = [\n    \\{\n      label: &#39;Filter Tags&#39;,\n      value: null,\n      default: true\n    \\},\n    \\{\n      label: &#39;Filter by tag&#39;,\n      header: true\n    \\},\n    \\{\n      divider: true\n    \\},\n    \\{\n      label: &#39;Important&#39;,\n      description: &#39;2 new&#39;,\n      value: 1\n    \\},\n    \\{\n      label: &#39;Hopper&#39;,\n      description: &#39;10 new&#39;,\n      value: 2\n    \\},\n    \\{\n      label: &#39;Discussion&#39;,\n      description: &#39;5 new&#39;,\n      value: 3\n    \\}\n  ]\n&lt;/script&gt;\n</code></pre> </div> <h3 class="ui header">Image</h3> <p>A dropdown menu can contain an image.</p> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 6)}"></i> </div> <div class="ui segment {bottom: !example[6]} attached"> <su-dropdown items="{dropdownItems7}"></su-dropdown> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[6]} "> <pre><code class="prettyprint">&lt;su-dropdown items=&quot;\\{ dropdownItems \\}&quot;&gt;&lt;/su-dropdown&gt;\n\n&lt;script&gt;\n  this.dropdownItems = [\n    \\{\n      label: &#39;Add User&#39;,\n      value: null,\n      default: true\n    \\},\n    \\{\n      label: &#39;People You Might Know&#39;,\n      header: true\n    \\},\n    \\{\n      label: &#39;Jenny Hess&#39;,\n      image: &#39;./images/avatar/small/jenny.jpg&#39;,\n      value: &#39;jenny&#39;\n    \\},\n    \\{\n      label: &#39;Elliot Fu&#39;,\n      image: &#39;./images/avatar/small/elliot.jpg&#39;,\n      value: &#39;elliot&#39;\n    \\},\n    \\{\n      label: &#39;Stevie Feliciano&#39;,\n      image: &#39;./images/avatar/small/stevie.jpg&#39;,\n      value: &#39;stevie&#39;\n    \\},\n    \\{\n      label: &#39;Your Friends\\&#39; Friends&#39;,\n      header: true\n    \\},\n    \\{\n      label: &#39;Christian&#39;,\n      image: &#39;./images/avatar/small/christian.jpg&#39;,\n      value: &#39;christian&#39;\n    \\},\n    \\{\n      label: &#39;Matt&#39;,\n      image: &#39;./images/avatar/small/matt.jpg&#39;,\n      value: &#39;matt&#39;\n    \\},\n    \\{\n      label: &#39;Justen Kitsune&#39;,\n      image: &#39;./images/avatar/small/justen.jpg&#39;,\n      value: &#39;justen&#39;\n    \\}\n  ]\n&lt;/script&gt;\n</code></pre> </div> <h2 class="ui dividing header">Named elements<a class="anchor" id="event"></a></h2> <h3 class="ui header">Single Selection</h3> <p>Access to single selection with ref attribute</p> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 9)}"></i> </div> <div class="ui segment {bottom: !example[9]} attached"> <su-dropdown items="{dropdownItems10}" ref="dropdown1"></su-dropdown> <div class="ui message"> <div class="header"> Selected value </div> <p>value: {refs.dropdown1.value}</p> <p>label: {refs.dropdown1.label}</p> </div> <button type="button" click="{setRefValue.bind(this, null)}" class="ui button">Select Default</button> <button type="button" click="{setRefValue.bind(this, 1)}" class="ui button">Select Male</button> <button type="button" click="{setRefValue.bind(this, 2)}" class="ui button">Select Female</button> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[9]} "> <pre><code class="prettyprint">&lt;su-dropdown items=&quot;\\{ dropdownItems \\}&quot; ref=&quot;dropdown1&quot;&gt;&lt;/su-dropdown&gt;\n\n&lt;div class=&quot;ui message&quot;&gt;\n  &lt;div class=&quot;header&quot;&gt;\n    Selected value\n  &lt;/div&gt;\n  &lt;p&gt;value: \\{ refs.dropdown1.value \\}&lt;/p&gt;\n  &lt;p&gt;label: \\{ refs.dropdown1.label \\}&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;button type=&quot;button&quot; click=&quot;\\{ setRefValue.bind(this, null) \\}&quot; class=&quot;ui button&quot;&gt;Select Default&lt;/button&gt;\n&lt;button type=&quot;button&quot; click=&quot;\\{ setRefValue.bind(this, 1) \\}&quot; class=&quot;ui button&quot;&gt;Select Male&lt;/button&gt;\n&lt;button type=&quot;button&quot; click=&quot;\\{ setRefValue.bind(this, 2) \\}&quot; class=&quot;ui button&quot;&gt;Select Female&lt;/button&gt;\n\n&lt;script&gt;\n  this.dropdownItems = [\n    \\{\n      label: &#39;Gender&#39;,\n      value: null,\n      default: true\n    \\},\n    \\{\n      label: &#39;Male&#39;,\n      value: 1\n    \\},\n    \\{\n      label: &#39;Female&#39;,\n      value: 2\n    \\},\n  ]\n\n  this.setRefValue = value =&gt; \\{\n    this.refs.dropdown1.value = value\n  \\}\n&lt;/script&gt;\n</code></pre> </div> <h3 class="ui header">Multi Selection</h3> <p>Access to multi selection with ref attribute</p> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 10)}"></i> </div> <div class="ui segment {bottom: !example[10]} attached"> <su-dropdown items="{dropdownItems11}" ref="dropdown2" multiple="true"></su-dropdown> <div class="ui message"> <div class="header"> Selected value </div> <p>value: {refs.dropdown2.value}</p> </div> <button type="button" click="{setMultiRefValue.bind(this, null)}" class="ui button">Select Default</button> <button type="button" click="{setMultiRefValue.bind(this, [\'angular\', \'css\'])}" class="ui button">Select Male</button> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[10]} "> <pre><code class="prettyprint">&lt;su-dropdown items=&quot;\\{ dropdownItems \\}&quot; ref=&quot;dropdown2&quot; multiple=&quot;true&quot;&gt;&lt;/su-dropdown&gt;\n\n&lt;div class=&quot;ui message&quot;&gt;\n  &lt;div class=&quot;header&quot;&gt;\n    Selected value\n  &lt;/div&gt;\n  &lt;p&gt;value: \\{ refs.dropdown2.value \\}&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;button type=&quot;button&quot; click=&quot;\\{ setMultiRefValue.bind(this, null) \\}&quot; class=&quot;ui button&quot;&gt;Select Default&lt;/button&gt;\n&lt;button type=&quot;button&quot; click=&quot;\\{ setMultiRefValue.bind(this, []) \\}&quot; class=&quot;ui button&quot;&gt;Select Male&lt;/button&gt;\n\n&lt;script&gt;\n  this.dropdownItems = [\n    \\{\n      label: &#39;Skills&#39;,\n      value: null,\n      default: true\n    \\},\n    \\{ value: &#39;angular&#39;, label: &#39;Angular&#39; \\},\n    \\{ value: &#39;css&#39;, label: &#39;CSS&#39; \\},\n    \\{ value: &#39;design&#39;, label: &#39;Graphic Design&#39; \\},\n    \\{ value: &#39;ember&#39;, label: &#39;Ember&#39; \\},\n    \\{ value: &#39;html&#39;, label: &#39;HTML&#39; \\},\n    \\{ value: &#39;ia&#39;, label: &#39;Information Architecture&#39; \\},\n    \\{ value: &#39;javascript&#39;, label: &#39;Javascript&#39; \\},\n    \\{ value: &#39;mech&#39;, label: &#39;Mechanical Engineering&#39; \\},\n    \\{ value: &#39;meteor&#39;, label: &#39;Meteor&#39; \\},\n    \\{ value: &#39;node&#39;, label: &#39;NodeJS&#39; \\},\n    \\{ value: &#39;plumbing&#39;, label: &#39;Plumbing&#39; \\},\n    \\{ value: &#39;python&#39;, label: &#39;Python&#39; \\},\n    \\{ value: &#39;rails&#39;, label: &#39;Rails&#39; \\},\n    \\{ value: &#39;react&#39;, label: &#39;React&#39; \\},\n    \\{ value: &#39;repair&#39;, label: &#39;Kitchen Repair&#39; \\},\n    \\{ value: &#39;ruby&#39;, label: &#39;Ruby&#39; \\},\n    \\{ value: &#39;ui&#39;, label: &#39;UI Design&#39; \\},\n    \\{ value: &#39;ux&#39;, label: &#39;User Experience&#39; \\}\n  ]\n\n  this.setRefValue = value =&gt; \\{\n    this.refs.dropdown1.value = value\n  \\}\n&lt;/script&gt;\n</code></pre> </div>', "", "", function (e) {
  "use strict";
  var a = this;this.example = [], this.toggleExample = function (e) {
    a.example[e] = !a.example[e];
  }, this.dropdownItems = [{ label: "Gender", value: null, default: !0 }, { label: "Male", value: 1 }, { label: "Female", value: 2 }], this.dropdownItems2 = [{ label: "State", value: null, default: !0 }, { value: "AL", label: "Alabama" }, { value: "AK", label: "Alaska" }, { value: "AZ", label: "Arizona" }, { value: "AR", label: "Arkansas" }, { value: "CA", label: "California" }, { value: "CO", label: "Colorado" }, { value: "CT", label: "Connecticut" }, { value: "DE", label: "Delaware" }, { value: "DC", label: "District Of Columbia" }, { value: "FL", label: "Florida" }, { value: "GA", label: "Georgia" }, { value: "HI", label: "Hawaii" }, { value: "ID", label: "Idaho" }, { value: "IL", label: "Illinois" }, { value: "IN", label: "Indiana" }, { value: "IA", label: "Iowa" }, { value: "KS", label: "Kansas" }, { value: "KY", label: "Kentucky" }, { value: "LA", label: "Louisiana" }, { value: "ME", label: "Maine" }, { value: "MD", label: "Maryland" }, { value: "MA", label: "Massachusetts" }, { value: "MI", label: "Michigan" }, { value: "MN", label: "Minnesota" }, { value: "MS", label: "Mississippi" }, { value: "MO", label: "Missouri" }, { value: "MT", label: "Montana" }, { value: "NE", label: "Nebraska" }, { value: "NV", label: "Nevada" }, { value: "NH", label: "New Hampshire" }, { value: "NJ", label: "New Jersey" }, { value: "NM", label: "New Mexico" }, { value: "NY", label: "New York" }, { value: "NC", label: "North Carolina" }, { value: "ND", label: "North Dakota" }, { value: "OH", label: "Ohio" }, { value: "OK", label: "Oklahoma" }, { value: "OR", label: "Oregon" }, { value: "PA", label: "Pennsylvania" }, { value: "RI", label: "Rhode Island" }, { value: "SC", label: "South Carolina" }, { value: "SD", label: "South Dakota" }, { value: "TN", label: "Tennessee" }, { value: "TX", label: "Texas" }, { value: "UT", label: "Utah" }, { value: "VT", label: "Vermont" }, { value: "VA", label: "Virginia" }, { value: "WA", label: "Washington" }, { value: "WV", label: "West Virginia" }, { value: "WI", label: "Wisconsin" }, { value: "WY", label: "Wyoming" }], this.dropdownItems3 = [{ label: "Filter", value: null, default: !0 }, { label: "Filter by tag", icon: "tags", header: !0 }, { label: "Important", value: 1 }, { label: "Announcement", value: 2 }, { label: "Discussion", value: 3 }], this.dropdownItems4 = [{ label: "Filter", value: null, default: !0 }, { label: "Filter by tag", icon: "tags", header: !0 }, { divider: !0 }, { label: "Important", value: 1 }, { label: "Announcement", value: 2 }, { label: "Discussion", value: 3 }], this.dropdownItems5 = [{ label: "Filter", value: null, default: !0 }, { label: "Filter by tag", icon: "tags", header: !0 }, { divider: !0 }, { label: "Important", icon: "attention", value: 1 }, { label: "Announcement", icon: "comment", value: 2 }, { label: "Discussion", icon: "conversation", value: 3 }], this.dropdownItems6 = [{ label: "Filter Tags", value: null, default: !0 }, { label: "Filter by tag", header: !0 }, { divider: !0 }, { label: "Important", description: "2 new", value: 1 }, { label: "Hopper", description: "10 new", value: 2 }, { label: "Discussion", description: "5 new", value: 3 }], this.dropdownItems7 = [{ label: "Add User", value: null, default: !0 }, { label: "People You Might Know", header: !0 }, { label: "Jenny Hess", image: "./images/avatar/small/jenny.jpg", value: "jenny" }, { label: "Elliot Fu", image: "./images/avatar/small/elliot.jpg", value: "elliot" }, { label: "Stevie Feliciano", image: "./images/avatar/small/stevie.jpg", value: "stevie" }, { label: "Your Friends' Friends", header: !0 }, { label: "Christian", image: "./images/avatar/small/christian.jpg", value: "christian" }, { label: "Matt", image: "./images/avatar/small/matt.jpg", value: "matt" }, { label: "Justen Kitsune", image: "./images/avatar/small/justen.jpg", value: "justen" }], this.dropdownItems8 = [{ label: "Skills", value: null, default: !0 }, { value: "angular", label: "Angular" }, { value: "css", label: "CSS" }, { value: "design", label: "Graphic Design" }, { value: "ember", label: "Ember" }, { value: "html", label: "HTML" }, { value: "ia", label: "Information Architecture" }, { value: "javascript", label: "Javascript" }, { value: "mech", label: "Mechanical Engineering" }, { value: "meteor", label: "Meteor" }, { value: "node", label: "NodeJS" }, { value: "plumbing", label: "Plumbing" }, { value: "python", label: "Python" }, { value: "rails", label: "Rails" }, { value: "react", label: "React" }, { value: "repair", label: "Kitchen Repair" }, { value: "ruby", label: "Ruby" }, { value: "ui", label: "UI Design" }, { value: "ux", label: "User Experience" }], this.dropdownItems9 = [{ label: "Select Friend", value: null, default: !0 }, { label: "Jenny Hess", image: "./images/avatar/small/jenny.jpg", value: "jenny" }, { label: "Elliot Fu", image: "./images/avatar/small/elliot.jpg", value: "elliot" }, { label: "Stevie Feliciano", image: "./images/avatar/small/stevie.jpg", value: "stevie" }, { label: "Christian", image: "./images/avatar/small/christian.jpg", value: "christian" }, { label: "Matt", image: "./images/avatar/small/matt.jpg", value: "matt" }, { label: "Justen Kitsune", image: "./images/avatar/small/justen.jpg", value: "justen" }], this.dropdownItems10 = [{ label: "Gender", value: null, default: !0 }, { label: "Male", value: 1 }, { label: "Female", value: 2 }], this.dropdownItems11 = [{ label: "Skills", value: null, default: !0 }, { value: "angular", label: "Angular" }, { value: "css", label: "CSS" }, { value: "design", label: "Graphic Design" }, { value: "ember", label: "Ember" }, { value: "html", label: "HTML" }, { value: "ia", label: "Information Architecture" }, { value: "javascript", label: "Javascript" }, { value: "mech", label: "Mechanical Engineering" }, { value: "meteor", label: "Meteor" }, { value: "node", label: "NodeJS" }, { value: "plumbing", label: "Plumbing" }, { value: "python", label: "Python" }, { value: "rails", label: "Rails" }, { value: "react", label: "React" }, { value: "repair", label: "Kitchen Repair" }, { value: "ruby", label: "Ruby" }, { value: "ui", label: "UI Design" }, { value: "ux", label: "User Experience" }], this.setRefValue = function (e) {
    a.refs.dropdown1.value = e;
  }, this.setMultiRefValue = function (e) {
    a.refs.dropdown2.value = e, a.update();
  }, this.on("mount", function () {
    PR.prettyPrint(!1);
  });
}), riot.tag2("demo-modal", '<h1 class="ui header"> Modal <div class="sub header">A modal displays content that temporarily blocks interactions with the main view of a site</div> </h1> <h2 class="ui dividing header">Types<a class="anchor" id="types"></a></h2> <h3 class="ui header">Modal</h3> <p>A standard modal</p> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 0)}"></i> </div> <div class="ui segment {bottom: !example[0]} attached"> <su-modal modal="{modal}" class="large"> <div class="ui medium image"> <img src="./images/avatar2/large/rachel.png"> </div> <div class="description"> <div class="ui header">Default Profile Image</div> <p>We\'ve found the following <a href="https://www.gravatar.com" target="_blank">gravatar</a> image associated with your e-mail address.</p> <p>Is it okay to use this photo?</p> </div> </su-modal> <button class="ui button" onclick="{showModal}">Show modal</button> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[0]}"> <pre><code class="prettyprint">&lt;su-modal modal=&quot;\\{ modal \\}&quot; class=&quot;large&quot;&gt;\n  &lt;div class=&quot;ui medium image&quot;&gt;\n    &lt;img src=&quot;./images/avatar2/large/rachel.png&quot; /&gt;\n  &lt;/div&gt;\n  &lt;div class=&quot;description&quot;&gt;\n    &lt;div class=&quot;ui header&quot;&gt;Default Profile Image&lt;/div&gt;\n    &lt;p&gt;We&#39;ve found the following &lt;a href=&quot;https://www.gravatar.com&quot; target=&quot;_blank&quot;&gt;gravatar&lt;/a&gt; image associated with your\n      e-mail address.&lt;/p&gt;\n    &lt;p&gt;Is it okay to use this photo?&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/su-modal&gt;\n&lt;button class=&quot;ui button&quot; onclick=&quot;\\{ showModal \\}&quot;&gt;Show modal&lt;/button&gt;\n\n&lt;script&gt;\n  this.modal = \\{\n    visible: false,\n    heading: &#39;Select a Photo&#39;,\n    content_class: &#39;image&#39;,\n    buttons: [\\{\n      text: &#39;Ok&#39;,\n      type: &#39;primary&#39;,\n      icon: &#39;checkmark&#39;\n    \\}, \\{\n      text: &#39;Canel&#39;\n    \\}]\n  \\}\n\n  this.showModal = () =&gt; \\{\n    this.modal.visible = true\n  \\}\n&lt;/script&gt;\n</code></pre> </div> <h3 class="ui header">Basic</h3> <p>A modal can reduce its complexity</p> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 1)}"></i> </div> <div class="ui segment {bottom: !example[1]} attached"> <su-modal modal="{modal_basic}" class="basic"> Your inbox is getting full, would you like us to enable automatic archiving of old messages? </su-modal> <button class="ui button" onclick="{showModalBasic}">Show modal</button> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[1]}"> <pre><code class="prettyprint">&lt;su-modal modal=&quot;\\{ modal \\}&quot; class=&quot;basic&quot;&gt;\n  Your inbox is getting full, would you like us to enable automatic archiving of old messages?\n&lt;/su-modal&gt;\n&lt;button class=&quot;ui button&quot; onclick=&quot;\\{ showModalBasic \\}&quot;&gt;Show modal&lt;/button&gt;\n\n&lt;script&gt;\n  this.modal = \\{\n    visible: false,\n    heading: \\{\n      text: &#39;Archive Old Messages&#39;,\n      icon: &#39;archive&#39;\n    \\},\n    buttons: [\\{\n      text: &#39;No&#39;\n    \\}, \\{\n      text: &#39;Yes&#39;,\n      type: &#39;green&#39;,\n      icon: &#39;checkmark&#39;\n    \\}]\n  \\}\n\n  this.showModalBasic = () =&gt; \\{\n    this.modal.visible = true\n  \\}\n&lt;/script&gt;\n</code></pre> </div>', "", "", function (e) {
  "use strict";
  var a = this;this.example = [], this.toggleExample = function (e) {
    a.example[e] = !a.example[e];
  }, this.modal = { visible: !1, heading: "Select a Photo", size: "large", content_class: "image", buttons: [{ text: "Ok", type: "primary", icon: "checkmark" }, { text: "Canel" }] }, this.showModal = function () {
    a.modal.visible = !0;
  }, this.modal_basic = { visible: !1, heading: { text: "Archive Old Messages", icon: "archive" }, buttons: [{ text: "No" }, { text: "Yes", type: "green", icon: "checkmark" }] }, this.showModalBasic = function () {
    a.modal_basic.visible = !0;
  }, this.on("mount", function () {
    PR.prettyPrint(!1);
  });
}), riot.tag2("root", '<h1 class="ui header"> Semantic UI Riot <div class="sub header">Semantic-UI-Riot integration.</div> </h1> <h2 class="ui dividing header" id="introduction">Introduction</h2> <p> Semantic UI Riot is Riot integration for <a href="https://semantic-ui.com/">Semantic UI</a>. </p>', "", "", function (e) {});

},{"../package.json":2}],2:[function(require,module,exports){
module.exports={
  "name": "semantic-ui-riot",
  "version": "0.0.7",
  "description": "Semantic UI for Riot",
  "main": "dist/semantic-ui-riot.min.js",
  "files": [
    "dist"
  ],
  "scripts": {
    "start": "gulp"
  },
  "keywords": [
    "riotjs",
    "riot",
    "semantic",
    "semanticui"
  ],
  "author": {
    "name": "black-trooper",
    "url": "https://github.com/black-trooper/semantic-ui-riot/"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/black-trooper/semantic-ui-riot/issues"
  },
  "dependencies": {
    "riot": "^3.6.1"
  },
  "devDependencies": {
    "babel": "^6.23.0",
    "babel-core": "^6.25.0",
    "babel-preset-es2015-riot": "^1.1.0",
    "babelify": "^7.3.0",
    "browserify": "^14.4.0",
    "eslint-plugin-html": "^3.1.1",
    "gulp": "^3.9.1",
    "gulp-babel": "^7.0.0",
    "gulp-concat": "^2.6.1",
    "gulp-eslint": "^4.0.0",
    "gulp-htmlhint": "^0.3.1",
    "gulp-natural-sort": "^0.1.1",
    "gulp-plumber": "^1.1.0",
    "gulp-rename": "^1.2.2",
    "gulp-riot": "^1.1.1",
    "gulp-uglify": "^3.0.0",
    "gulp-webserver-fast": "^0.9.1",
    "riot-route": "^3.1.1",
    "run-sequence": "^2.0.0",
    "uglify-js": "^3.0.25",
    "vinyl-source-stream": "^1.1.0"
  }
}

},{}]},{},[1]);
