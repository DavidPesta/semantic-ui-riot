(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

riot.tag2("app", '<navigation></navigation> <div style="margin-left:15.5rem"> <div class="ui padded one column grid"> <div class="column"> <content></content> </div> </div> </div>', "", "", function (e) {
  "use strict";
  route("", function () {
    riot.mount("content", "root");
  }), route(function (e) {
    riot.mount("content", e);
  }), route.start(!0);
}), riot.tag2("demo-checkbox", "<h1 class=\"ui header\"> Checkbox <div class=\"sub header\">A checkbox allows a user to select a value from a small set of options, often binary</div> </h1> <h2 class=\"ui dividing header\">Types<a class=\"anchor\" id=\"types\"></a></h2> <h3 class=\"ui header\">Checkbox</h3> <p>A standard checkbox</p> <div class=\"ui segment secondary top attached example\"> Example <i class=\"icon code\" onclick=\"{toggleExample.bind(this, 1)}\"></i> </div> <div class=\"ui segment {bottom: !example[1]} attached\"> <su-checkbox> Make my profile visible </su-checkbox> </div> <div class=\"ui segment bottom attached inverted transition {hidden: !example[1]} \"> <pre><code class=\"prettyprint\">\"\\n      \\u003csu-checkbox\\u003e\\n        Make my profile visible\\n      \\u003c/su-checkbox\\u003e\\n    \"</code></pre> </div> <h3 class=\"ui header\">Radio</h3> <p>A checkbox can be formatted as a radio element. This means it is an exclusive option.</p> <div class=\"ui segment secondary top attached example\"> Example <i class=\"icon code link\" onclick=\"{toggleExample.bind(this, 2)}\"></i> </div> <div class=\"ui segment {bottom: !example[2]} attached\"> <su-radio name=\"radio1\"> Radio choice1 </su-radio> <su-radio name=\"radio1\"> Radio choice2 </su-radio> </div> <div class=\"ui segment bottom attached inverted transition {hidden: !example[2]}\"> <pre><code class=\"prettyprint\">\"\\n      \\u003csu-radio name=\\\"radio\\\"\\u003e\\n        Radio choice1\\n      \\u003c/su-radio\\u003e\\n      \\u003csu-radio name=\\\"radio\\\"\\u003e\\n        Radio choice2\\n      \\u003c/su-radio\\u003e\\n    \"</code></pre> </div> <h3 class=\"ui header\">Slider</h3> <p>A checkbox can be formatted to emphasize the current selection state</p> <div class=\"ui segment secondary top attached example\"> Example <i class=\"icon code\" onclick=\"{toggleExample.bind(this, 3)}\"></i> </div> <div class=\"ui segment {bottom: !example[3]} attached\"> <su-checkbox class=\"slider\"> Accept terms and conditions </su-checkbox> </div> <div class=\"ui segment bottom attached inverted transition {hidden: !example[3]}\"> <pre><code class=\"prettyprint\">\"\\n      \\u003csu-checkbox class=\\\"slider\\\"\\u003e\\n        Accept terms and conditions\\n      \\u003c/su-checkbox\\u003e\\n    \"</code></pre> </div> <p>A checkbox can be formatted to emphasize the current selection state</p> <div class=\"ui segment secondary top attached example\"> Example <i class=\"icon code\" onclick=\"{toggleExample.bind(this, 4)}\"></i> </div> <div class=\"ui segment {bottom: !example[4]} attached\"> <div class=\"ui form\"> <div class=\"grouped fields\"> <label>Outbound Throughput</label> <div class=\"field\"> <su-radio class=\"slider\" name=\"throughput\"> 20 mbps max </su-radio> </div> <div class=\"field\"> <su-radio class=\"slider\" name=\"throughput\"> 10mbps max </su-radio> </div> <div class=\"field\"> <su-radio class=\"slider\" name=\"throughput\"> 5mbps max </su-radio> </div> <div class=\"field\"> <su-radio class=\"slider\" name=\"throughput\"> Unmetered </su-radio> </div> </div> </div> </div> <div class=\"ui segment bottom attached inverted transition {hidden: !example[4]} \"> <pre><code class=\"prettyprint\">\"\\n      \\u003cdiv class=\\\"ui form\\\"\\u003e\\n        \\u003cdiv class=\\\"grouped fields\\\"\\u003e\\n          \\u003clabel\\u003eOutbound Throughput\\u003c/label\\u003e\\n          \\u003cdiv class=\\\"field\\\"\\u003e\\n            \\u003csu-radio class=\\\"slider\\\" name=\\\"throughput\\\"\\u003e\\n              20 mbps max\\n            \\u003c/su-radio\\u003e\\n          \\u003c/div\\u003e\\n          \\u003cdiv class=\\\"field\\\"\\u003e\\n            \\u003csu-radio class=\\\"slider\\\" name=\\\"throughput\\\"\\u003e\\n              10mbps max\\n            \\u003c/su-radio\\u003e\\n          \\u003c/div\\u003e\\n          \\u003cdiv class=\\\"field\\\"\\u003e\\n            \\u003csu-radio class=\\\"slider\\\" name=\\\"throughput\\\"\\u003e\\n              5mbps max\\n            \\u003c/su-radio\\u003e\\n          \\u003c/div\\u003e\\n          \\u003cdiv class=\\\"field\\\"\\u003e\\n            \\u003csu-radio class=\\\"slider\\\" name=\\\"throughput\\\"\\u003e\\n              Unmetered\\n            \\u003c/su-radio\\u003e\\n          \\u003c/div\\u003e\\n        \\u003c/div\\u003e\\n      \\u003c/div\\u003e\\n    \"</code></pre> </div> <h2 class=\"ui dividing header\">Access elements<a class=\"anchor\" id=\"event\"></a></h2> <h3 class=\"ui header\">Checkbox</h3> <p>Access to checkbox with ref attribute</p> <div class=\"ui segment secondary top attached example\"> Example <i class=\"icon code\" onclick=\"{toggleExample.bind(this, 5)}\"></i> </div> <div class=\"ui segment {bottom: !example[5]} attached\"> <su-checkbox ref=\"checkbox1\"> Make my profile visible </su-checkbox> <div class=\"ui message\"> <div class=\"header\"> Checked from refs </div> <p>{refs.checkbox1.checked ? 'on' : 'off'}</p> </div> <button type=\"button\" click=\"{setRefValue.bind(this, true)}\" class=\"ui button\">Check on</button> <button type=\"button\" click=\"{setRefValue.bind(this, false)}\" class=\"ui button\">Check off</button> </div> <div class=\"ui segment bottom attached inverted transition {hidden: !example[5]} \"> <pre><code class=\"prettyprint\">\"\\n      \\u003csu-checkbox ref=\\\"checkbox1\\\"\\u003e\\n        Make my profile visible\\n      \\u003c/su-checkbox\\u003e\\n\\n      \\u003cdiv class=\\\"ui message\\\"\\u003e\\n        \\u003cdiv class=\\\"header\\\"\\u003e\\n          Checked\\n        \\u003c/div\\u003e\\n        \\u003cp\\u003e\\{ refs.checkbox1.check() ? 'on' : 'off' \\}\\u003c/p\\u003e\\n      \\u003c/div\\u003e\\n\\n      \\u003cbutton type=\\\"button\\\" click=\\\"\\{ setRefValue.bind(this, true) \\}\\\" class=\\\"ui button\\\"\\u003eCheck on\\u003c/button\\u003e\\n      \\u003cbutton type=\\\"button\\\" click=\\\"\\{ setRefValue.bind(this, false) \\}\\\" class=\\\"ui button\\\"\\u003eCheck off\\u003c/button\\u003e\\n\\n      \\u003cscript\\u003e\\n        this.setRefValue = value =\\u003e \\{\\n          this.refs.checkbox1.checked = value\\n        \\}\\n      \\u003c/script\\u003e\\n    \"</code></pre> </div> <p>Access to checkbox with check attribute</p> <div class=\"ui segment secondary top attached example\"> Example <i class=\"icon code\" onclick=\"{toggleExample.bind(this, 5)}\"></i> </div> <div class=\"ui segment {bottom: !example[5]} attached\"> <su-checkbox ref=\"checkbox2\" check=\"{checkbox2}\"> Make my profile visible </su-checkbox> <div class=\"ui message\"> <div class=\"header\"> Checked from refs </div> <p>{refs.checkbox2.checked ? 'on' : 'off'}</p> </div> <button type=\"button\" click=\"{setCheckboxValue.bind(this, true)}\" class=\"ui button\">Check on</button> <button type=\"button\" click=\"{setCheckboxValue.bind(this, false)}\" class=\"ui button\">Check off</button> </div> <div class=\"ui segment bottom attached inverted transition {hidden: !example[5]} \"> <pre><code class=\"prettyprint\">\"\\n      \\u003csu-checkbox ref=\\\"checkbox2\\\" check=\\\"\\{ checkbox2 \\}\\\"\\u003e\\n        Make my profile visible\\n      \\u003c/su-checkbox\\u003e\\n\\n      \\u003cdiv class=\\\"ui message\\\"\\u003e\\n        \\u003cdiv class=\\\"header\\\"\\u003e\\n          Checked\\n        \\u003c/div\\u003e\\n        \\u003cp\\u003e\\{ refs.checkbox2.check ? 'on' : 'off' \\}\\u003c/p\\u003e\\n      \\u003c/div\\u003e\\n\\n      \\u003cbutton type=\\\"button\\\" click=\\\"\\{ setCheckboxValue.bind(this, true) \\}\\\" class=\\\"ui button\\\"\\u003eCheck on\\u003c/button\\u003e\\n      \\u003cbutton type=\\\"button\\\" click=\\\"\\{ setCheckboxValue.bind(this, false) \\}\\\" class=\\\"ui button\\\"\\u003eCheck off\\u003c/button\\u003e\\n\\n      \\u003cscript\\u003e\\n        this.on('mount', () =\\u003e \\{\\n          this.refs.checkbox2.on('click', value =\\u003e \\{\\n            this.setCheckboxValue(value)\\n          \\})\\n        \\})\\n        this.setCheckboxValue = value =\\u003e \\{\\n          this.checkbox2 = value\\n        \\}\\n      \\u003c/script\\u003e\\n    \"</code></pre> </div> <h3 class=\"ui header\">Radio</h3> <p>Access to radio with ref attribute</p> <div class=\"ui segment secondary top attached example\"> Example <i class=\"icon code\" onclick=\"{toggleExample.bind(this, 6)}\"></i> </div> <div class=\"ui segment {bottom: !example[6]} attached\"> <su-radio name=\"radio2\" ref=\"radio1_1\" value=\"1\" checked=\"{radio1 == 1}\"> Radio choice1 </su-radio> <su-radio name=\"radio2\" ref=\"radio1_2\" value=\"2\" checked=\"{radio1 == 2}\"> Radio choice2 </su-radio> <div class=\"ui message\"> <div class=\"header\"> Checked from refs </div> <p>Radio choice1 {refs.radio1_1.checked ? 'on' : 'off'}</p> <p>Radio choice2 {refs.radio1_2.checked ? 'on' : 'off'}</p> </div> <button type=\"button\" click=\"{setRadioValue.bind(this, 1)}\" class=\"ui button\">Choice1</button> <button type=\"button\" click=\"{setRadioValue.bind(this, 2)}\" class=\"ui button\">Choice2</button> </div> <div class=\"ui segment bottom attached inverted transition {hidden: !example[6]} \"> <pre><code class=\"prettyprint\">\"\\n      \\u003csu-radio name=\\\"radio\\\" ref=\\\"radio1_1\\\" value=\\\"1\\\" checked=\\\"\\{ radio1 == 1 \\}\\\"\\u003e\\n        Radio choice1\\n      \\u003c/su-radio\\u003e\\n      \\u003csu-radio name=\\\"radio\\\" ref=\\\"radio1_2\\\" value=\\\"2\\\" checked=\\\"\\{ radio1 == 2 \\}\\\"\\u003e\\n        Radio choice2\\n      \\u003c/su-radio\\u003e\\n  \\n      \\u003cdiv class=\\\"ui message\\\"\\u003e\\n        \\u003cdiv class=\\\"header\\\"\\u003e\\n          Checked from refs\\n        \\u003c/div\\u003e\\n        \\u003cp\\u003eRadio choice1 \\{ refs.radio1_1.checked ? 'on' : 'off' \\}\\u003c/p\\u003e\\n        \\u003cp\\u003eRadio choice2 \\{ refs.radio1_2.checked ? 'on' : 'off' \\}\\u003c/p\\u003e\\n      \\u003c/div\\u003e\\n  \\n      \\u003cbutton type=\\\"button\\\" click=\\\"\\{ setRadioValue.bind(this, 1) \\}\\\" class=\\\"ui button\\\"\\u003eChoice1\\u003c/button\\u003e\\n      \\u003cbutton type=\\\"button\\\" click=\\\"\\{ setRadioValue.bind(this, 2) \\}\\\" class=\\\"ui button\\\"\\u003eChoice2\\u003c/button\\u003e\\n\\n      \\u003cscript\\u003e\\n        this.on('mount', () =\\u003e \\{\\n          this.refs.radio1_1.on('click', value =\\u003e \\{\\n            this.setRadioValue(value)\\n          \\})\\n          this.refs.radio1_2.on('click', value =\\u003e \\{\\n            this.setRadioValue(value)\\n          \\})\\n        \\})\\n        this.radio1 = 1\\n        this.setRadioValue = value =\\u003e \\{\\n          this.radio1 = value\\n        \\}\\n      \\u003c/script\\u003e\\n    \"</code></pre> </div>", "", "", function (e) {
  "use strict";
  var a = this;this.example = [], this.toggleExample = function (e) {
    a.example[e] = !a.example[e];
  }, this.radio1 = 1, this.setRadioValue = function (e) {
    a.radio1 = e;
  }, this.setCheckboxValue = function (e) {
    a.checkbox2 = e;
  }, this.setRefValue = function (e) {
    a.refs.checkbox1.checked = e;
  }, this.on("mount", function () {
    a.refs.checkbox2.on("click", function (e) {
      a.setCheckboxValue(e);
    }), a.refs.radio1_1.on("click", function (e) {
      a.setRadioValue(e);
    }), a.refs.radio1_2.on("click", function (e) {
      a.setRadioValue(e);
    }), PR.prettyPrint(!1);
  });
}), riot.tag2("demo-dropdown", "<h1 class=\"ui header\"> Dropdown <div class=\"sub header\">A dropdown allows a user to select a value from a series of options</div> </h1> <h2 class=\"ui dividing header\">Types<a class=\"anchor\" id=\"types\"></a></h2> <h3 class=\"ui header\">Selection</h3> <p>A dropdown can be used to select between choices in a form</p> <div class=\"ui segment secondary top attached example\"> Example <i class=\"icon code\" onclick=\"{toggleExample.bind(this, 0)}\"></i> </div> <div class=\"ui segment {bottom: !example[0]} attached\"> <su-dropdown items=\"{dropdownItems}\"></su-dropdown> </div> <div class=\"ui segment bottom attached inverted transition {hidden: !example[0]} \"> <pre><code class=\"prettyprint\">\"\\n      \\u003csu-dropdown items=\\\"\\{ dropdownItems \\}\\\"\\u003e\\u003c/su-dropdown\\u003e\\n\\n      \\u003cscript\\u003e\\n        this.dropdownItems = [\\n          \\{\\n            label: 'Gender',\\n            value: null,\\n            default: true\\n          \\},\\n          \\{\\n            label: 'Male',\\n            value: 1\\n          \\},\\n          \\{\\n            label: 'Female',\\n            value: 2\\n          \\},\\n        ]\\n      \\u003c/script\\u003e\\n    \"</code></pre> </div> <div class=\"ui segment secondary top attached example\"> Example <i class=\"icon code\" onclick=\"{toggleExample.bind(this, 8)}\"></i> </div> <div class=\"ui segment {bottom: !example[8]} attached\"> <su-dropdown items=\"{dropdownItems9}\" class=\"fluid\"></su-dropdown> </div> <div class=\"ui segment bottom attached inverted transition {hidden: !example[8]} \"> <pre><code class=\"prettyprint\">\"\\n      \\u003csu-dropdown items=\\\"\\{ dropdownItems \\}\\\" class=\\\"fluid\\\" \\u003e\\u003c/su-dropdown\\u003e\\n\\n      \\u003cscript\\u003e\\n        this.dropdownItems = [\\n          \\{\\n            label: 'Select Friend',\\n            value: null,\\n            default: true\\n          \\},\\n          \\{\\n            label: 'Jenny Hess',\\n            image: './images/avatar/small/jenny.jpg',\\n            value: 'jenny'\\n          \\},\\n          \\{\\n            label: 'Elliot Fu',\\n            image: './images/avatar/small/elliot.jpg',\\n            value: 'elliot'\\n          \\},\\n          \\{\\n            label: 'Stevie Feliciano',\\n            image: './images/avatar/small/stevie.jpg',\\n            value: 'stevie'\\n          \\},\\n          \\{\\n            label: 'Christian',\\n            image: './images/avatar/small/christian.jpg',\\n            value: 'christian'\\n          \\},\\n          \\{\\n            label: 'Matt',\\n            image: './images/avatar/small/matt.jpg',\\n            value: 'matt'\\n          \\},\\n          \\{\\n            label: 'Justen Kitsune',\\n            image: './images/avatar/small/justen.jpg',\\n            value: 'justen'\\n          \\}\\n        ]\\n      \\u003c/script\\u003e\\n    \"</code></pre> </div> <h3 class=\"ui header\">Search Selection</h3> <p>A selection dropdown can allow a user to search through a large list of choices.</p> <div class=\"ui segment secondary top attached example\"> Example <i class=\"icon code\" onclick=\"{toggleExample.bind(this, 1)}\"></i> </div> <div class=\"ui segment {bottom: !example[1]} attached\"> <su-dropdown items=\"{dropdownItems2}\" search=\"true\"></su-dropdown> </div> <div class=\"ui segment bottom attached inverted transition {hidden: !example[1]} \"> <pre><code class=\"prettyprint\">\"\\n      \\u003csu-dropdown items=\\\"\\{ dropdownItems \\}\\\" search=\\\"true\\\"\\u003e\\u003c/su-dropdown\\u003e\\n\\n      \\u003cscript\\u003e\\n        this.dropdownItems = [\\n          \\{\\n            label: 'State',\\n            value: null,\\n            default: true\\n          \\},\\n          \\{ value: 'AL', label: 'Alabama' \\},\\n          \\{ value: 'AK', label: 'Alaska' \\},\\n          \\{ value: 'AZ', label: 'Arizona' \\},\\n          \\{ value: 'AR', label: 'Arkansas' \\},\\n          \\{ value: 'CA', label: 'California' \\},\\n          \\{ value: 'CO', label: 'Colorado' \\},\\n          \\{ value: 'CT', label: 'Connecticut' \\},\\n          \\{ value: 'DE', label: 'Delaware' \\},\\n          \\{ value: 'DC', label: 'District Of Columbia' \\},\\n          \\{ value: 'FL', label: 'Florida' \\},\\n          \\{ value: 'GA', label: 'Georgia' \\},\\n          \\{ value: 'HI', label: 'Hawaii' \\},\\n          \\{ value: 'ID', label: 'Idaho' \\},\\n          \\{ value: 'IL', label: 'Illinois' \\},\\n          \\{ value: 'IN', label: 'Indiana' \\},\\n          \\{ value: 'IA', label: 'Iowa' \\},\\n          \\{ value: 'KS', label: 'Kansas' \\},\\n          \\{ value: 'KY', label: 'Kentucky' \\},\\n          \\{ value: 'LA', label: 'Louisiana' \\},\\n          \\{ value: 'ME', label: 'Maine' \\},\\n          \\{ value: 'MD', label: 'Maryland' \\},\\n          \\{ value: 'MA', label: 'Massachusetts' \\},\\n          \\{ value: 'MI', label: 'Michigan' \\},\\n          \\{ value: 'MN', label: 'Minnesota' \\},\\n          \\{ value: 'MS', label: 'Mississippi' \\},\\n          \\{ value: 'MO', label: 'Missouri' \\},\\n          \\{ value: 'MT', label: 'Montana' \\},\\n          \\{ value: 'NE', label: 'Nebraska' \\},\\n          \\{ value: 'NV', label: 'Nevada' \\},\\n          \\{ value: 'NH', label: 'New Hampshire' \\},\\n          \\{ value: 'NJ', label: 'New Jersey' \\},\\n          \\{ value: 'NM', label: 'New Mexico' \\},\\n          \\{ value: 'NY', label: 'New York' \\},\\n          \\{ value: 'NC', label: 'North Carolina' \\},\\n          \\{ value: 'ND', label: 'North Dakota' \\},\\n          \\{ value: 'OH', label: 'Ohio' \\},\\n          \\{ value: 'OK', label: 'Oklahoma' \\},\\n          \\{ value: 'OR', label: 'Oregon' \\},\\n          \\{ value: 'PA', label: 'Pennsylvania' \\},\\n          \\{ value: 'RI', label: 'Rhode Island' \\},\\n          \\{ value: 'SC', label: 'South Carolina' \\},\\n          \\{ value: 'SD', label: 'South Dakota' \\},\\n          \\{ value: 'TN', label: 'Tennessee' \\},\\n          \\{ value: 'TX', label: 'Texas' \\},\\n          \\{ value: 'UT', label: 'Utah' \\},\\n          \\{ value: 'VT', label: 'Vermont' \\},\\n          \\{ value: 'VA', label: 'Virginia' \\},\\n          \\{ value: 'WA', label: 'Washington' \\},\\n          \\{ value: 'WV', label: 'West Virginia' \\},\\n          \\{ value: 'WI', label: 'Wisconsin' \\},\\n          \\{ value: 'WY', label: 'Wyoming' \\}\\n        ]\\n      \\u003c/script\\u003e\\n    \"</code></pre> </div> <h3 class=\"ui header\">Multiple Selection</h3> <p>A selection dropdown can allow multiple selections</p> <div class=\"ui segment secondary top attached example\"> Example <i class=\"icon code\" onclick=\"{toggleExample.bind(this, 7)}\"></i> </div> <div class=\"ui segment {bottom: !example[7]} attached\"> <su-dropdown items=\"{dropdownItems8}\" multiple=\"true\"></su-dropdown> </div> <div class=\"ui segment bottom attached inverted transition {hidden: !example[7]} \"> <pre><code class=\"prettyprint\">\"\\n      \\u003csu-dropdown items=\\\"\\{ dropdownItems \\}\\\" multiple=\\\"true\\\"\\u003e\\u003c/su-dropdown\\u003e\\n\\n      \\u003cscript\\u003e\\n        this.dropdownItems = [\\n          \\{\\n            label: 'Skills',\\n            value: null,\\n            default: true\\n          \\},\\n          \\{ value: 'angular', label: 'Angular' \\},\\n          \\{ value: 'css', label: 'CSS' \\},\\n          \\{ value: 'design', label: 'Graphic Design' \\},\\n          \\{ value: 'ember', label: 'Ember' \\},\\n          \\{ value: 'html', label: 'HTML' \\},\\n          \\{ value: 'ia', label: 'Information Architecture' \\},\\n          \\{ value: 'javascript', label: 'Javascript' \\},\\n          \\{ value: 'mech', label: 'Mechanical Engineering' \\},\\n          \\{ value: 'meteor', label: 'Meteor' \\},\\n          \\{ value: 'node', label: 'NodeJS' \\},\\n          \\{ value: 'plumbing', label: 'Plumbing' \\},\\n          \\{ value: 'python', label: 'Python' \\},\\n          \\{ value: 'rails', label: 'Rails' \\},\\n          \\{ value: 'react', label: 'React' \\},\\n          \\{ value: 'repair', label: 'Kitchen Repair' \\},\\n          \\{ value: 'ruby', label: 'Ruby' \\},\\n          \\{ value: 'ui', label: 'UI Design' \\},\\n          \\{ value: 'ux', label: 'User Experience' \\}\\n        ]\\n      \\u003c/script\\u003e\\n    \"</code></pre> </div> <h2 class=\"ui dividing header\">Content<a class=\"anchor\" id=\"content\"></a></h2> <h3 class=\"ui header\">Header</h3> <p>A dropdown menu can contain a header</p> <div class=\"ui segment secondary top attached example\"> Example <i class=\"icon code\" onclick=\"{toggleExample.bind(this, 2)}\"></i> </div> <div class=\"ui segment {bottom: !example[2]} attached\"> <su-dropdown items=\"{dropdownItems3}\"></su-dropdown> </div> <div class=\"ui segment bottom attached inverted transition {hidden: !example[2]} \"> <pre><code class=\"prettyprint\">\"\\n      \\u003csu-dropdown items=\\\"\\{ dropdownItems \\}\\\"\\u003e\\u003c/su-dropdown\\u003e\\n\\n      \\u003cscript\\u003e\\n        this.dropdownItems = [\\n          \\{\\n            label: 'Filter',\\n            value: null,\\n            default: true\\n          \\},\\n          \\{\\n            label: 'Filter by tag',\\n            icon: 'tags',\\n            header: true\\n          \\},\\n          \\{\\n            label: 'Important',\\n            value: 1\\n          \\},\\n          \\{\\n            label: 'Announcement',\\n            value: 2\\n          \\},\\n          \\{\\n            label: 'Discussion',\\n            value: 3\\n          \\}\\n        ]\\n      \\u003c/script\\u003e\\n    \"</code></pre> </div> <h3 class=\"ui header\">Divider</h3> <p>A dropdown menu can contain dividers to separate related content</p> <div class=\"ui segment secondary top attached example\"> Example <i class=\"icon code\" onclick=\"{toggleExample.bind(this, 3)}\"></i> </div> <div class=\"ui segment {bottom: !example[3]} attached\"> <su-dropdown items=\"{dropdownItems4}\"></su-dropdown> </div> <div class=\"ui segment bottom attached inverted transition {hidden: !example[3]} \"> <pre><code class=\"prettyprint\">\"\\n      \\u003csu-dropdown items=\\\"\\{ dropdownItems \\}\\\"\\u003e\\u003c/su-dropdown\\u003e\\n\\n      \\u003cscript\\u003e\\n        this.dropdownItems = [\\n          \\{\\n            label: 'Filter',\\n            value: null,\\n            default: true\\n          \\},\\n          \\{\\n            label: 'Filter by tag',\\n            icon: 'tags',\\n            header: true\\n          \\},\\n          \\{\\n            divider: true\\n          \\},\\n          \\{\\n            label: 'Important',\\n            value: 1\\n          \\},\\n          \\{\\n            label: 'Announcement',\\n            value: 2\\n          \\},\\n          \\{\\n            label: 'Discussion',\\n            value: 3\\n          \\}\\n        ]\\n      \\u003c/script\\u003e\\n    \"</code></pre> </div> <h3 class=\"ui header\">Icon</h3> <p>A dropdown menu can contain an <a href=\"https://semantic-ui.com/elements/icon.html\">icon</a>.</p> <div class=\"ui segment secondary top attached example\"> Example <i class=\"icon code\" onclick=\"{toggleExample.bind(this, 4)}\"></i> </div> <div class=\"ui segment {bottom: !example[4]} attached\"> <su-dropdown items=\"{dropdownItems5}\"></su-dropdown> </div> <div class=\"ui segment bottom attached inverted transition {hidden: !example[4]} \"> <pre><code class=\"prettyprint\">\"\\n      \\u003csu-dropdown items=\\\"\\{ dropdownItems \\}\\\"\\u003e\\u003c/su-dropdown\\u003e\\n\\n      \\u003cscript\\u003e\\n        this.dropdownItems = [\\n          \\{\\n            label: 'Filter',\\n            value: null,\\n            default: true\\n          \\},\\n          \\{\\n            label: 'Filter by tag',\\n            icon: 'tags',\\n            header: true\\n          \\},\\n          \\{\\n            divider: true\\n          \\},\\n          \\{\\n            label: 'Important',\\n            icon: 'attention',\\n            value: 1\\n          \\},\\n          \\{\\n            label: 'Announcement',\\n            icon: 'comment',\\n            value: 2\\n          \\},\\n          \\{\\n            label: 'Discussion',\\n            icon: 'conversation',\\n            value: 3\\n          \\}\\n        ]\\n      \\u003c/script\\u003e\\n    \"</code></pre> </div> <h3 class=\"ui header\">Description</h3> <p>A dropdown menu can contain a description.</p> <div class=\"ui segment secondary top attached example\"> Example <i class=\"icon code\" onclick=\"{toggleExample.bind(this, 5)}\"></i> </div> <div class=\"ui segment {bottom: !example[5]} attached\"> <su-dropdown items=\"{dropdownItems6}\"></su-dropdown> </div> <div class=\"ui segment bottom attached inverted transition {hidden: !example[5]} \"> <pre><code class=\"prettyprint\">\"\\n      \\u003csu-dropdown items=\\\"\\{ dropdownItems \\}\\\"\\u003e\\u003c/su-dropdown\\u003e\\n\\n      \\u003cscript\\u003e\\n        this.dropdownItems = [\\n          \\{\\n            label: 'Filter Tags',\\n            value: null,\\n            default: true\\n          \\},\\n          \\{\\n            label: 'Filter by tag',\\n            header: true\\n          \\},\\n          \\{\\n            divider: true\\n          \\},\\n          \\{\\n            label: 'Important',\\n            description: '2 new',\\n            value: 1\\n          \\},\\n          \\{\\n            label: 'Hopper',\\n            description: '10 new',\\n            value: 2\\n          \\},\\n          \\{\\n            label: 'Discussion',\\n            description: '5 new',\\n            value: 3\\n          \\}\\n        ]\\n      \\u003c/script\\u003e\\n    \"</code></pre> </div> <h3 class=\"ui header\">Image</h3> <p>A dropdown menu can contain an image.</p> <div class=\"ui segment secondary top attached example\"> Example <i class=\"icon code\" onclick=\"{toggleExample.bind(this, 6)}\"></i> </div> <div class=\"ui segment {bottom: !example[6]} attached\"> <su-dropdown items=\"{dropdownItems7}\"></su-dropdown> </div> <div class=\"ui segment bottom attached inverted transition {hidden: !example[6]} \"> <pre><code class=\"prettyprint\">\"\\n      \\u003csu-dropdown items=\\\"\\{ dropdownItems \\}\\\"\\u003e\\u003c/su-dropdown\\u003e\\n\\n      \\u003cscript\\u003e\\n        this.dropdownItems = [\\n          \\{\\n            label: 'Add User',\\n            value: null,\\n            default: true\\n          \\},\\n          \\{\\n            label: 'People You Might Know',\\n            header: true\\n          \\},\\n          \\{\\n            label: 'Jenny Hess',\\n            image: './images/avatar/small/jenny.jpg',\\n            value: 'jenny'\\n          \\},\\n          \\{\\n            label: 'Elliot Fu',\\n            image: './images/avatar/small/elliot.jpg',\\n            value: 'elliot'\\n          \\},\\n          \\{\\n            label: 'Stevie Feliciano',\\n            image: './images/avatar/small/stevie.jpg',\\n            value: 'stevie'\\n          \\},\\n          \\{\\n            label: 'Your Friends\\\\' Friends',\\n            header: true\\n          \\},\\n          \\{\\n            label: 'Christian',\\n            image: './images/avatar/small/christian.jpg',\\n            value: 'christian'\\n          \\},\\n          \\{\\n            label: 'Matt',\\n            image: './images/avatar/small/matt.jpg',\\n            value: 'matt'\\n          \\},\\n          \\{\\n            label: 'Justen Kitsune',\\n            image: './images/avatar/small/justen.jpg',\\n            value: 'justen'\\n          \\}\\n        ]\\n      \\u003c/script\\u003e\\n    \"</code></pre> </div> <h2 class=\"ui dividing header\">Named elements<a class=\"anchor\" id=\"event\"></a></h2> <h3 class=\"ui header\">Single Selection</h3> <p>Access to single selection with ref attribute</p> <div class=\"ui segment secondary top attached example\"> Example <i class=\"icon code\" onclick=\"{toggleExample.bind(this, 9)}\"></i> </div> <div class=\"ui segment {bottom: !example[9]} attached\"> <su-dropdown items=\"{dropdownItems10}\" ref=\"dropdown1\"></su-dropdown> <div class=\"ui message\"> <div class=\"header\"> Selected value </div> <p>value: {refs.dropdown1.value}</p> <p>label: {refs.dropdown1.label}</p> </div> <button type=\"button\" click=\"{setRefValue.bind(this, null)}\" class=\"ui button\">Select Default</button> <button type=\"button\" click=\"{setRefValue.bind(this, 1)}\" class=\"ui button\">Select Male</button> <button type=\"button\" click=\"{setRefValue.bind(this, 2)}\" class=\"ui button\">Select Female</button> </div> <div class=\"ui segment bottom attached inverted transition {hidden: !example[9]} \"> <pre><code class=\"prettyprint\">\"\\n      \\u003csu-dropdown items=\\\"\\{ dropdownItems \\}\\\" ref=\\\"dropdown1\\\"\\u003e\\u003c/su-dropdown\\u003e\\n\\n      \\u003cdiv class=\\\"ui message\\\"\\u003e\\n        \\u003cdiv class=\\\"header\\\"\\u003e\\n          Selected value\\n        \\u003c/div\\u003e\\n        \\u003cp\\u003evalue: \\{ refs.dropdown1.value \\}\\u003c/p\\u003e\\n        \\u003cp\\u003elabel: \\{ refs.dropdown1.label \\}\\u003c/p\\u003e\\n      \\u003c/div\\u003e\\n\\n      \\u003cbutton type=\\\"button\\\" click=\\\"\\{ setRefValue.bind(this, null) \\}\\\" class=\\\"ui button\\\"\\u003eSelect Default\\u003c/button\\u003e\\n      \\u003cbutton type=\\\"button\\\" click=\\\"\\{ setRefValue.bind(this, 1) \\}\\\" class=\\\"ui button\\\"\\u003eSelect Male\\u003c/button\\u003e\\n      \\u003cbutton type=\\\"button\\\" click=\\\"\\{ setRefValue.bind(this, 2) \\}\\\" class=\\\"ui button\\\"\\u003eSelect Female\\u003c/button\\u003e\\n\\n      \\u003cscript\\u003e\\n        this.dropdownItems = [\\n          \\{\\n            label: 'Gender',\\n            value: null,\\n            default: true\\n          \\},\\n          \\{\\n            label: 'Male',\\n            value: 1\\n          \\},\\n          \\{\\n            label: 'Female',\\n            value: 2\\n          \\},\\n        ]\\n\\n        this.setRefValue = value =\\u003e \\{\\n          this.refs.dropdown1.value = value\\n        \\}\\n      \\u003c/script\\u003e\\n    \"</code></pre> </div> <h3 class=\"ui header\">Multi Selection</h3> <p>Access to multi selection with ref attribute</p> <div class=\"ui segment secondary top attached example\"> Example <i class=\"icon code\" onclick=\"{toggleExample.bind(this, 10)}\"></i> </div> <div class=\"ui segment {bottom: !example[10]} attached\"> <su-dropdown items=\"{dropdownItems11}\" ref=\"dropdown2\" multiple=\"true\"></su-dropdown> <div class=\"ui message\"> <div class=\"header\"> Selected value </div> <p>value: {refs.dropdown2.value}</p> </div> <button type=\"button\" click=\"{setMultiRefValue.bind(this, null)}\" class=\"ui button\">Select Default</button> <button type=\"button\" click=\"{setMultiRefValue.bind(this, ['angular', 'css'])}\" class=\"ui button\">Select Male</button> </div> <div class=\"ui segment bottom attached inverted transition {hidden: !example[10]} \"> <pre><code class=\"prettyprint\">\"\\n      \\u003csu-dropdown items=\\\"\\{ dropdownItems \\}\\\" ref=\\\"dropdown2\\\" multiple=\\\"true\\\"\\u003e\\u003c/su-dropdown\\u003e\\n\\n      \\u003cdiv class=\\\"ui message\\\"\\u003e\\n        \\u003cdiv class=\\\"header\\\"\\u003e\\n          Selected value\\n        \\u003c/div\\u003e\\n        \\u003cp\\u003evalue: \\{ refs.dropdown2.value \\}\\u003c/p\\u003e\\n      \\u003c/div\\u003e\\n\\n      \\u003cbutton type=\\\"button\\\" click=\\\"\\{ setMultiRefValue.bind(this, null) \\}\\\" class=\\\"ui button\\\"\\u003eSelect Default\\u003c/button\\u003e\\n      \\u003cbutton type=\\\"button\\\" click=\\\"\\{ setMultiRefValue.bind(this, []) \\}\\\" class=\\\"ui button\\\"\\u003eSelect Male\\u003c/button\\u003e\\n\\n      \\u003cscript\\u003e\\n        this.dropdownItems = [\\n          \\{\\n            label: 'Skills',\\n            value: null,\\n            default: true\\n          \\},\\n          \\{ value: 'angular', label: 'Angular' \\},\\n          \\{ value: 'css', label: 'CSS' \\},\\n          \\{ value: 'design', label: 'Graphic Design' \\},\\n          \\{ value: 'ember', label: 'Ember' \\},\\n          \\{ value: 'html', label: 'HTML' \\},\\n          \\{ value: 'ia', label: 'Information Architecture' \\},\\n          \\{ value: 'javascript', label: 'Javascript' \\},\\n          \\{ value: 'mech', label: 'Mechanical Engineering' \\},\\n          \\{ value: 'meteor', label: 'Meteor' \\},\\n          \\{ value: 'node', label: 'NodeJS' \\},\\n          \\{ value: 'plumbing', label: 'Plumbing' \\},\\n          \\{ value: 'python', label: 'Python' \\},\\n          \\{ value: 'rails', label: 'Rails' \\},\\n          \\{ value: 'react', label: 'React' \\},\\n          \\{ value: 'repair', label: 'Kitchen Repair' \\},\\n          \\{ value: 'ruby', label: 'Ruby' \\},\\n          \\{ value: 'ui', label: 'UI Design' \\},\\n          \\{ value: 'ux', label: 'User Experience' \\}\\n        ]\\n\\n        this.setRefValue = value =\\u003e \\{\\n          this.refs.dropdown1.value = value\\n        \\}\\n      \\u003c/script\\u003e\\n    \"</code></pre> </div>", "", "", function (e) {
  "use strict";
  var a = this;this.example = [], this.toggleExample = function (e) {
    a.example[e] = !a.example[e];
  }, this.dropdownItems = [{ label: "Gender", value: null, default: !0 }, { label: "Male", value: 1 }, { label: "Female", value: 2 }], this.dropdownItems2 = [{ label: "State", value: null, default: !0 }, { value: "AL", label: "Alabama" }, { value: "AK", label: "Alaska" }, { value: "AZ", label: "Arizona" }, { value: "AR", label: "Arkansas" }, { value: "CA", label: "California" }, { value: "CO", label: "Colorado" }, { value: "CT", label: "Connecticut" }, { value: "DE", label: "Delaware" }, { value: "DC", label: "District Of Columbia" }, { value: "FL", label: "Florida" }, { value: "GA", label: "Georgia" }, { value: "HI", label: "Hawaii" }, { value: "ID", label: "Idaho" }, { value: "IL", label: "Illinois" }, { value: "IN", label: "Indiana" }, { value: "IA", label: "Iowa" }, { value: "KS", label: "Kansas" }, { value: "KY", label: "Kentucky" }, { value: "LA", label: "Louisiana" }, { value: "ME", label: "Maine" }, { value: "MD", label: "Maryland" }, { value: "MA", label: "Massachusetts" }, { value: "MI", label: "Michigan" }, { value: "MN", label: "Minnesota" }, { value: "MS", label: "Mississippi" }, { value: "MO", label: "Missouri" }, { value: "MT", label: "Montana" }, { value: "NE", label: "Nebraska" }, { value: "NV", label: "Nevada" }, { value: "NH", label: "New Hampshire" }, { value: "NJ", label: "New Jersey" }, { value: "NM", label: "New Mexico" }, { value: "NY", label: "New York" }, { value: "NC", label: "North Carolina" }, { value: "ND", label: "North Dakota" }, { value: "OH", label: "Ohio" }, { value: "OK", label: "Oklahoma" }, { value: "OR", label: "Oregon" }, { value: "PA", label: "Pennsylvania" }, { value: "RI", label: "Rhode Island" }, { value: "SC", label: "South Carolina" }, { value: "SD", label: "South Dakota" }, { value: "TN", label: "Tennessee" }, { value: "TX", label: "Texas" }, { value: "UT", label: "Utah" }, { value: "VT", label: "Vermont" }, { value: "VA", label: "Virginia" }, { value: "WA", label: "Washington" }, { value: "WV", label: "West Virginia" }, { value: "WI", label: "Wisconsin" }, { value: "WY", label: "Wyoming" }], this.dropdownItems3 = [{ label: "Filter", value: null, default: !0 }, { label: "Filter by tag", icon: "tags", header: !0 }, { label: "Important", value: 1 }, { label: "Announcement", value: 2 }, { label: "Discussion", value: 3 }], this.dropdownItems4 = [{ label: "Filter", value: null, default: !0 }, { label: "Filter by tag", icon: "tags", header: !0 }, { divider: !0 }, { label: "Important", value: 1 }, { label: "Announcement", value: 2 }, { label: "Discussion", value: 3 }], this.dropdownItems5 = [{ label: "Filter", value: null, default: !0 }, { label: "Filter by tag", icon: "tags", header: !0 }, { divider: !0 }, { label: "Important", icon: "attention", value: 1 }, { label: "Announcement", icon: "comment", value: 2 }, { label: "Discussion", icon: "conversation", value: 3 }], this.dropdownItems6 = [{ label: "Filter Tags", value: null, default: !0 }, { label: "Filter by tag", header: !0 }, { divider: !0 }, { label: "Important", description: "2 new", value: 1 }, { label: "Hopper", description: "10 new", value: 2 }, { label: "Discussion", description: "5 new", value: 3 }], this.dropdownItems7 = [{ label: "Add User", value: null, default: !0 }, { label: "People You Might Know", header: !0 }, { label: "Jenny Hess", image: "./images/avatar/small/jenny.jpg", value: "jenny" }, { label: "Elliot Fu", image: "./images/avatar/small/elliot.jpg", value: "elliot" }, { label: "Stevie Feliciano", image: "./images/avatar/small/stevie.jpg", value: "stevie" }, { label: "Your Friends' Friends", header: !0 }, { label: "Christian", image: "./images/avatar/small/christian.jpg", value: "christian" }, { label: "Matt", image: "./images/avatar/small/matt.jpg", value: "matt" }, { label: "Justen Kitsune", image: "./images/avatar/small/justen.jpg", value: "justen" }], this.dropdownItems8 = [{ label: "Skills", value: null, default: !0 }, { value: "angular", label: "Angular" }, { value: "css", label: "CSS" }, { value: "design", label: "Graphic Design" }, { value: "ember", label: "Ember" }, { value: "html", label: "HTML" }, { value: "ia", label: "Information Architecture" }, { value: "javascript", label: "Javascript" }, { value: "mech", label: "Mechanical Engineering" }, { value: "meteor", label: "Meteor" }, { value: "node", label: "NodeJS" }, { value: "plumbing", label: "Plumbing" }, { value: "python", label: "Python" }, { value: "rails", label: "Rails" }, { value: "react", label: "React" }, { value: "repair", label: "Kitchen Repair" }, { value: "ruby", label: "Ruby" }, { value: "ui", label: "UI Design" }, { value: "ux", label: "User Experience" }], this.dropdownItems9 = [{ label: "Select Friend", value: null, default: !0 }, { label: "Jenny Hess", image: "./images/avatar/small/jenny.jpg", value: "jenny" }, { label: "Elliot Fu", image: "./images/avatar/small/elliot.jpg", value: "elliot" }, { label: "Stevie Feliciano", image: "./images/avatar/small/stevie.jpg", value: "stevie" }, { label: "Christian", image: "./images/avatar/small/christian.jpg", value: "christian" }, { label: "Matt", image: "./images/avatar/small/matt.jpg", value: "matt" }, { label: "Justen Kitsune", image: "./images/avatar/small/justen.jpg", value: "justen" }], this.dropdownItems10 = [{ label: "Gender", value: null, default: !0 }, { label: "Male", value: 1 }, { label: "Female", value: 2 }], this.dropdownItems11 = [{ label: "Skills", value: null, default: !0 }, { value: "angular", label: "Angular" }, { value: "css", label: "CSS" }, { value: "design", label: "Graphic Design" }, { value: "ember", label: "Ember" }, { value: "html", label: "HTML" }, { value: "ia", label: "Information Architecture" }, { value: "javascript", label: "Javascript" }, { value: "mech", label: "Mechanical Engineering" }, { value: "meteor", label: "Meteor" }, { value: "node", label: "NodeJS" }, { value: "plumbing", label: "Plumbing" }, { value: "python", label: "Python" }, { value: "rails", label: "Rails" }, { value: "react", label: "React" }, { value: "repair", label: "Kitchen Repair" }, { value: "ruby", label: "Ruby" }, { value: "ui", label: "UI Design" }, { value: "ux", label: "User Experience" }], this.setRefValue = function (e) {
    a.refs.dropdown1.value = e;
  }, this.setMultiRefValue = function (e) {
    a.refs.dropdown2.value = e, a.update();
  }, this.on("mount", function () {
    PR.prettyPrint(!1);
  });
}), riot.tag2("demo-modal", "<h1 class=\"ui header\"> Modal <div class=\"sub header\">A modal displays content that temporarily blocks interactions with the main view of a site</div> </h1> <h2 class=\"ui dividing header\">Types<a class=\"anchor\" id=\"types\"></a></h2> <h3 class=\"ui header\">Modal</h3> <p>A standard modal</p> <div class=\"ui segment secondary top attached example\"> Example <i class=\"icon code\" onclick=\"{toggleExample.bind(this, 0)}\"></i> </div> <div class=\"ui segment {bottom: !example[0]} attached\"> <su-modal modal=\"{modal}\" class=\"large\"> <div class=\"ui medium image\"> <img src=\"./images/avatar2/large/rachel.png\"> </div> <div class=\"description\"> <div class=\"ui header\">Default Profile Image</div> <p>We've found the following <a href=\"https://www.gravatar.com\" target=\"_blank\">gravatar</a> image associated with your e-mail address.</p> <p>Is it okay to use this photo?</p> </div> </su-modal> <button class=\"ui button\" onclick=\"{showModal}\">Show modal</button> </div> <div class=\"ui segment bottom attached inverted transition {hidden: !example[0]}\"> <pre><code class=\"prettyprint\">\"\\n      \\u003csu-modal modal=\\\"\\{ modal \\}\\\" class=\\\"large\\\"\\u003e\\n        \\u003cdiv class=\\\"ui medium image\\\"\\u003e\\n          \\u003cimg src=\\\"./images/avatar2/large/rachel.png\\\" /\\u003e\\n        \\u003c/div\\u003e\\n        \\u003cdiv class=\\\"description\\\"\\u003e\\n          \\u003cdiv class=\\\"ui header\\\"\\u003eDefault Profile Image\\u003c/div\\u003e\\n          \\u003cp\\u003eWe've found the following \\u003ca href=\\\"https://www.gravatar.com\\\" target=\\\"_blank\\\"\\u003egravatar\\u003c/a\\u003e image associated with your\\n            e-mail address.\\u003c/p\\u003e\\n          \\u003cp\\u003eIs it okay to use this photo?\\u003c/p\\u003e\\n        \\u003c/div\\u003e\\n      \\u003c/su-modal\\u003e\\n      \\u003cbutton class=\\\"ui button\\\" onclick=\\\"\\{ showModal \\}\\\"\\u003eShow modal\\u003c/button\\u003e\\n\\n      \\u003cscript\\u003e\\n        this.modal = \\{\\n          visible: false,\\n          heading: 'Select a Photo',\\n          content_class: 'image',\\n          buttons: [\\{\\n            text: 'Ok',\\n            type: 'primary',\\n            icon: 'checkmark'\\n          \\}, \\{\\n            text: 'Canel'\\n          \\}]\\n        \\}\\n\\n        this.showModal = () =\\u003e \\{\\n          this.modal.visible = true\\n        \\}\\n      \\u003c/script\\u003e\\n    \"</code></pre> </div> <h3 class=\"ui header\">Basic</h3> <p>A modal can reduce its complexity</p> <div class=\"ui segment secondary top attached example\"> Example <i class=\"icon code\" onclick=\"{toggleExample.bind(this, 1)}\"></i> </div> <div class=\"ui segment {bottom: !example[1]} attached\"> <su-modal modal=\"{modal_basic}\" class=\"basic\"> Your inbox is getting full, would you like us to enable automatic archiving of old messages? </su-modal> <button class=\"ui button\" onclick=\"{showModalBasic}\">Show modal</button> </div> <div class=\"ui segment bottom attached inverted transition {hidden: !example[1]}\"> <pre><code class=\"prettyprint\">\"\\n      \\u003csu-modal modal=\\\"\\{ modal \\}\\\" class=\\\"basic\\\"\\u003e\\n        Your inbox is getting full, would you like us to enable automatic archiving of old messages?\\n      \\u003c/su-modal\\u003e\\n      \\u003cbutton class=\\\"ui button\\\" onclick=\\\"\\{ showModalBasic \\}\\\"\\u003eShow modal\\u003c/button\\u003e\\n\\n      \\u003cscript\\u003e\\n        this.modal = \\{\\n          visible: false,\\n          heading: \\{\\n            text: 'Archive Old Messages',\\n            icon: 'archive'\\n          \\},\\n          buttons: [\\{\\n            text: 'No'\\n          \\}, \\{\\n            text: 'Yes',\\n            type: 'green',\\n            icon: 'checkmark'\\n          \\}]\\n        \\}\\n\\n        this.showModalBasic = () =\\u003e \\{\\n          this.modal.visible = true\\n        \\}\\n      \\u003c/script\\u003e\\n    \"</code></pre> </div>", "", "", function (e) {
  "use strict";
  var a = this;this.example = [], this.toggleExample = function (e) {
    a.example[e] = !a.example[e];
  }, this.modal = { visible: !1, heading: "Select a Photo", size: "large", content_class: "image", buttons: [{ text: "Ok", type: "primary", icon: "checkmark" }, { text: "Canel" }] }, this.showModal = function () {
    a.modal.visible = !0;
  }, this.modal_basic = { visible: !1, heading: { text: "Archive Old Messages", icon: "archive" }, buttons: [{ text: "No" }, { text: "Yes", type: "green", icon: "checkmark" }] }, this.showModalBasic = function () {
    a.modal_basic.visible = !0;
  }, this.on("mount", function () {
    PR.prettyPrint(!1);
  });
}), riot.tag2("root", '<h1 class="ui header"> Semantic UI Riot <div class="sub header">Semantic-UI-Riot integration.</div> </h1> <h2 class="ui dividing header" id="introduction">Introduction</h2> <p> Semantic UI Riot is Riot integration for <a href="https://semantic-ui.com/">Semantic UI</a>. </p>', "", "", function (e) {}), riot.tag2("navigation", '<div class="ui inverted vertical left fixed menu"> <div class="item"> <strong>Semantic UI Riot <small><em>{version}</em></small> </strong> </div> <div class="item"> <div class="header">Getting Started</div> <div class="menu"> <a class="item" href="#">Introduction</a> <a href="https://github.com/black-trooper/semantic-ui-riot" class="item"> <i aria-hidden="true" class="github icon"></i> GitHub </a> </div> </div> <div class="item"> <div class="header">Module</div> <div class="menu"> <a class="item" href="#demo-checkbox">Checkbox</a> <a class="item" href="#demo-dropdown">Dropdown</a> <a class="item" href="#demo-modal">Modal</a> </div> </div> </div>', "", "", function (e) {
  "use strict";
  this.version = require("../package.json").version;
});

},{"../package.json":2}],2:[function(require,module,exports){
module.exports={
  "name": "semantic-ui-riot",
  "version": "0.0.21",
  "description": "Semantic UI for Riot",
  "main": "dist/semantic-ui-riot.min.js",
  "files": [
    "dist"
  ],
  "scripts": {
    "start": "gulp",
    "test": "karma start"
  },
  "keywords": [
    "riotjs",
    "riot",
    "semantic",
    "semanticui"
  ],
  "author": {
    "name": "black-trooper",
    "url": "https://github.com/black-trooper/semantic-ui-riot/"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/black-trooper/semantic-ui-riot/issues"
  },
  "dependencies": {
    "riot": "^3.6.1"
  },
  "devDependencies": {
    "babel": "^6.23.0",
    "babel-core": "^6.25.0",
    "babel-preset-es2015-riot": "^1.1.0",
    "babelify": "^7.3.0",
    "browserify": "^14.4.0",
    "chai": "^4.1.2",
    "eslint-plugin-html": "^3.1.1",
    "gulp": "^3.9.1",
    "gulp-babel": "^7.0.0",
    "gulp-concat": "^2.6.1",
    "gulp-eslint": "^4.0.0",
    "gulp-htmlhint": "^0.3.1",
    "gulp-natural-sort": "^0.1.1",
    "gulp-plumber": "^1.1.0",
    "gulp-rename": "^1.2.2",
    "gulp-riot": "^1.1.1",
    "gulp-uglify": "^3.0.0",
    "gulp-webserver-fast": "^0.9.1",
    "jquery": "2.2.2",
    "karma": "^1.7.1",
    "karma-babel-preprocessor": "^7.0.0",
    "karma-chrome-launcher": "^2.2.0",
    "karma-coverage": "^1.1.1",
    "karma-coveralls": "^1.1.2",
    "karma-mocha": "^1.3.0",
    "karma-mocha-reporter": "^2.2.4",
    "karma-riot": "^2.0.0",
    "karma-sinon-chai": "^1.3.2",
    "map-stream": "0.0.7",
    "mocha": "^4.0.1",
    "riot-route": "^3.1.1",
    "run-sequence": "^2.0.0",
    "sinon": "^2.1.0",
    "sinon-chai": "^2.13.0",
    "uglify-js": "^3.0.25",
    "vinyl-source-stream": "^1.1.0"
  }
}
},{}]},{},[1]);
