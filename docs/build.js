(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

riot.tag2("app", '<navigation></navigation> <div style="margin-left:15.5rem"> <div class="ui padded one column grid"> <div class="column"> <content></content> </div> </div> </div>', "", "", function (a) {
  "use strict";
  route("", function () {
    riot.mount("content", "root");
  }), route(function (a) {
    riot.mount("content", a);
  }), route.start(!0);
}), riot.tag2("demo-checkbox", '<h1 class="ui header"> Checkbox <div class="sub header">A checkbox allows a user to select a value from a small set of options, often binary</div> </h1> <h2 class="ui dividing header">Types<a class="anchor" id="types"></a></h2> <h3 class="ui header">Checkbox</h3> <p>A standard checkbox</p> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 1)}"></i> </div> <div class="ui segment {bottom: !example[1]} attached"> <su-checkbox> Make my profile visible </su-checkbox> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[1]} "> <pre><code class="prettyprint">&lt;su-checkbox&gt;\n  Make my profile visible\n&lt;/su-checkbox&gt;\n</code></pre> </div> <h3 class="ui header">Radio</h3> <p>A checkbox can be formatted as a radio element. This means it is an exclusive option.</p> <div class="ui segment secondary top attached example"> Example <i class="icon code link" onclick="{toggleExample.bind(this, 2)}"></i> </div> <div class="ui segment {bottom: !example[2]} attached"> <su-radio name="radio1"> Radio choice1 </su-radio> <su-radio name="radio1"> Radio choice2 </su-radio> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[2]}"> <pre><code class="prettyprint">&lt;su-radio name=&quot;radio&quot;&gt;\n  Radio choice1\n&lt;/su-radio&gt;\n&lt;su-radio name=&quot;radio&quot;&gt;\n  Radio choice2\n&lt;/su-radio&gt;\n</code></pre> </div> <h3 class="ui header">Slider</h3> <p>A checkbox can be formatted to emphasize the current selection state</p> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 3)}"></i> </div> <div class="ui segment {bottom: !example[3]} attached"> <su-checkbox class="slider"> Accept terms and conditions </su-checkbox> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[3]}"> <pre><code class="prettyprint">&lt;su-checkbox class=&quot;slider&quot;&gt;\n  Accept terms and conditions\n&lt;/su-checkbox&gt;\n</code></pre> </div> <p>A checkbox can be formatted to emphasize the current selection state</p> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 4)}"></i> </div> <div class="ui segment {bottom: !example[4]} attached"> <div class="ui form"> <div class="grouped fields"> <label>Outbound Throughput</label> <div class="field"> <su-radio class="slider" name="throughput"> 20 mbps max </su-radio> </div> <div class="field"> <su-radio class="slider" name="throughput"> 10mbps max </su-radio> </div> <div class="field"> <su-radio class="slider" name="throughput"> 5mbps max </su-radio> </div> <div class="field"> <su-radio class="slider" name="throughput"> Unmetered </su-radio> </div> </div> </div> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[4]} "> <pre><code class="prettyprint">&lt;div class=&quot;ui form&quot;&gt;\n  &lt;div class=&quot;grouped fields&quot;&gt;\n    &lt;label&gt;Outbound Throughput&lt;/label&gt;\n    &lt;div class=&quot;field&quot;&gt;\n      &lt;su-radio class=&quot;slider&quot; name=&quot;throughput&quot;&gt;\n        20 mbps max\n      &lt;/su-radio&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;field&quot;&gt;\n      &lt;su-radio class=&quot;slider&quot; name=&quot;throughput&quot;&gt;\n        10mbps max\n      &lt;/su-radio&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;field&quot;&gt;\n      &lt;su-radio class=&quot;slider&quot; name=&quot;throughput&quot;&gt;\n        5mbps max\n      &lt;/su-radio&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;field&quot;&gt;\n      &lt;su-radio class=&quot;slider&quot; name=&quot;throughput&quot;&gt;\n        Unmetered\n      &lt;/su-radio&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre> </div> <h2 class="ui dividing header">Access elements<a class="anchor" id="event"></a></h2> <h3 class="ui header">Checkbox</h3> <p>Access to checkbox with ref attribute</p> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 5)}"></i> </div> <div class="ui segment {bottom: !example[5]} attached"> <su-checkbox ref="checkbox1"> Make my profile visible </su-checkbox> <div class="ui message"> <div class="header"> Checked from refs </div> <p>{refs.checkbox1.checked ? \'on\' : \'off\'}</p> </div> <button type="button" click="{setRefValue.bind(this, true)}" class="ui button">Check on</button> <button type="button" click="{setRefValue.bind(this, false)}" class="ui button">Check off</button> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[5]} "> <pre><code class="prettyprint">&lt;su-checkbox ref=&quot;checkbox1&quot;&gt;\n  Make my profile visible\n&lt;/su-checkbox&gt;\n\n&lt;div class=&quot;ui message&quot;&gt;\n  &lt;div class=&quot;header&quot;&gt;\n    Checked\n  &lt;/div&gt;\n  &lt;p&gt;\\{ refs.checkbox1.check() ? &apos;on&apos; : &apos;off&apos; \\}&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;button type=&quot;button&quot; click=&quot;\\{ setRefValue.bind(this, true) \\}&quot; class=&quot;ui button&quot;&gt;Check on&lt;/button&gt;\n&lt;button type=&quot;button&quot; click=&quot;\\{ setRefValue.bind(this, false) \\}&quot; class=&quot;ui button&quot;&gt;Check off&lt;/button&gt;\n\n&lt;script&gt;\n  this.setRefValue = value =&gt; \\{\n    this.refs.checkbox1.checked = value\n  \\}\n&lt;/script&gt;\n</code></pre> </div> <p>Access to checkbox with check attribute</p> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 7)}"></i> </div> <div class="ui segment {bottom: !example[7]} attached"> <su-checkbox ref="checkbox2" check="{checkbox2}"> Make my profile visible </su-checkbox> <div class="ui message"> <div class="header"> Checked from refs </div> <p>{refs.checkbox2.checked ? \'on\' : \'off\'}</p> </div> <button type="button" click="{setCheckboxValue.bind(this, true)}" class="ui button">Check on</button> <button type="button" click="{setCheckboxValue.bind(this, false)}" class="ui button">Check off</button> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[7]} "> <pre><code class="prettyprint">&lt;su-checkbox ref=&quot;checkbox2&quot; check=&quot;\\{ checkbox2 \\}&quot;&gt;\n  Make my profile visible\n&lt;/su-checkbox&gt;\n\n&lt;div class=&quot;ui message&quot;&gt;\n  &lt;div class=&quot;header&quot;&gt;\n    Checked\n  &lt;/div&gt;\n  &lt;p&gt;\\{ refs.checkbox2.check ? &apos;on&apos; : &apos;off&apos; \\}&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;button type=&quot;button&quot; click=&quot;\\{ setCheckboxValue.bind(this, true) \\}&quot; class=&quot;ui button&quot;&gt;Check on&lt;/button&gt;\n&lt;button type=&quot;button&quot; click=&quot;\\{ setCheckboxValue.bind(this, false) \\}&quot; class=&quot;ui button&quot;&gt;Check off&lt;/button&gt;\n\n&lt;script&gt;\n  this.on(&apos;mount&apos;, () =&gt; \\{\n    this.refs.checkbox2.on(&apos;click&apos;, value =&gt; \\{\n      this.setCheckboxValue(value)\n    \\})\n  \\})\n  this.setCheckboxValue = value =&gt; \\{\n    this.checkbox2 = value\n  \\}\n&lt;/script&gt;\n</code></pre> </div> <h3 class="ui header">Radio</h3> <p>Access to radio with ref attribute</p> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 6)}"></i> </div> <div class="ui segment {bottom: !example[6]} attached"> <su-radio name="radio2" ref="radio1_1" value="1" checked="{radio1 == 1}"> Radio choice1 </su-radio> <su-radio name="radio2" ref="radio1_2" value="2" checked="{radio1 == 2}"> Radio choice2 </su-radio> <div class="ui message"> <div class="header"> Checked from refs </div> <p>Radio choice1 {refs.radio1_1.checked ? \'on\' : \'off\'}</p> <p>Radio choice2 {refs.radio1_2.checked ? \'on\' : \'off\'}</p> </div> <button type="button" click="{setRadioValue.bind(this, 1)}" class="ui button">Choice1</button> <button type="button" click="{setRadioValue.bind(this, 2)}" class="ui button">Choice2</button> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[6]} "> <pre><code class="prettyprint">&lt;su-radio name=&quot;radio&quot; ref=&quot;radio1_1&quot; value=&quot;1&quot; checked=&quot;\\{ radio1 == 1 \\}&quot;&gt;\n  Radio choice1\n&lt;/su-radio&gt;\n&lt;su-radio name=&quot;radio&quot; ref=&quot;radio1_2&quot; value=&quot;2&quot; checked=&quot;\\{ radio1 == 2 \\}&quot;&gt;\n  Radio choice2\n&lt;/su-radio&gt;\n\n&lt;div class=&quot;ui message&quot;&gt;\n  &lt;div class=&quot;header&quot;&gt;\n    Checked from refs\n  &lt;/div&gt;\n  &lt;p&gt;Radio choice1 \\{ refs.radio1_1.checked ? &apos;on&apos; : &apos;off&apos; \\}&lt;/p&gt;\n  &lt;p&gt;Radio choice2 \\{ refs.radio1_2.checked ? &apos;on&apos; : &apos;off&apos; \\}&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;button type=&quot;button&quot; click=&quot;\\{ setRadioValue.bind(this, 1) \\}&quot; class=&quot;ui button&quot;&gt;Choice1&lt;/button&gt;\n&lt;button type=&quot;button&quot; click=&quot;\\{ setRadioValue.bind(this, 2) \\}&quot; class=&quot;ui button&quot;&gt;Choice2&lt;/button&gt;\n\n&lt;script&gt;\n  this.on(&apos;mount&apos;, () =&gt; \\{\n    this.refs.radio1_1.on(&apos;click&apos;, value =&gt; \\{\n      this.setRadioValue(value)\n    \\})\n    this.refs.radio1_2.on(&apos;click&apos;, value =&gt; \\{\n      this.setRadioValue(value)\n    \\})\n  \\})\n  this.radio1 = 1\n  this.setRadioValue = value =&gt; \\{\n    this.radio1 = value\n  \\}\n&lt;/script&gt;\n</code></pre> </div>', "", "", function (a) {
  "use strict";
  var e = this;this.example = [], this.toggleExample = function (a) {
    e.example[a] = !e.example[a];
  }, this.radio1 = 1, this.setRadioValue = function (a) {
    e.radio1 = a;
  }, this.setCheckboxValue = function (a) {
    e.checkbox2 = a;
  }, this.setRefValue = function (a) {
    e.refs.checkbox1.checked = a;
  }, this.on("mount", function () {
    e.refs.checkbox2.on("click", function (a) {
      e.setCheckboxValue(a);
    }), e.refs.radio1_1.on("click", function (a) {
      e.setRadioValue(a);
    }), e.refs.radio1_2.on("click", function (a) {
      e.setRadioValue(a);
    }), PR.prettyPrint(!1);
  });
}), riot.tag2("demo-dropdown", '<h1 class="ui header"> Dropdown <div class="sub header">A dropdown allows a user to select a value from a series of options</div> </h1> <h2 class="ui dividing header">Types<a class="anchor" id="types"></a></h2> <h3 class="ui header">Selection</h3> <p>A dropdown can be used to select between choices in a form</p> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 0)}"></i> </div> <div class="ui segment {bottom: !example[0]} attached"> <su-dropdown items="{dropdownItems}"></su-dropdown> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[0]} "> <pre><code class="prettyprint">&lt;su-dropdown items=&quot;\\{ dropdownItems \\}&quot;&gt;&lt;/su-dropdown&gt;\n\n&lt;script&gt;\n  this.dropdownItems = [\n    \\{\n      label: &apos;Gender&apos;,\n      value: null,\n      default: true\n    \\},\n    \\{\n      label: &apos;Male&apos;,\n      value: 1\n    \\},\n    \\{\n      label: &apos;Female&apos;,\n      value: 2\n    \\},\n  ]\n&lt;/script&gt;\n</code></pre> </div> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 8)}"></i> </div> <div class="ui segment {bottom: !example[8]} attached"> <su-dropdown items="{dropdownItems9}" class="fluid"></su-dropdown> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[8]} "> <pre><code class="prettyprint">&lt;su-dropdown items=&quot;\\{ dropdownItems \\}&quot; class=&quot;fluid&quot; &gt;&lt;/su-dropdown&gt;\n\n&lt;script&gt;\n  this.dropdownItems = [\n    \\{\n      label: &apos;Select Friend&apos;,\n      value: null,\n      default: true\n    \\},\n    \\{\n      label: &apos;Jenny Hess&apos;,\n      image: &apos;./images/avatar/small/jenny.jpg&apos;,\n      value: &apos;jenny&apos;\n    \\},\n    \\{\n      label: &apos;Elliot Fu&apos;,\n      image: &apos;./images/avatar/small/elliot.jpg&apos;,\n      value: &apos;elliot&apos;\n    \\},\n    \\{\n      label: &apos;Stevie Feliciano&apos;,\n      image: &apos;./images/avatar/small/stevie.jpg&apos;,\n      value: &apos;stevie&apos;\n    \\},\n    \\{\n      label: &apos;Christian&apos;,\n      image: &apos;./images/avatar/small/christian.jpg&apos;,\n      value: &apos;christian&apos;\n    \\},\n    \\{\n      label: &apos;Matt&apos;,\n      image: &apos;./images/avatar/small/matt.jpg&apos;,\n      value: &apos;matt&apos;\n    \\},\n    \\{\n      label: &apos;Justen Kitsune&apos;,\n      image: &apos;./images/avatar/small/justen.jpg&apos;,\n      value: &apos;justen&apos;\n    \\}\n  ]\n&lt;/script&gt;\n</code></pre> </div> <h3 class="ui header">Search Selection</h3> <p>A selection dropdown can allow a user to search through a large list of choices.</p> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 1)}"></i> </div> <div class="ui segment {bottom: !example[1]} attached"> <su-dropdown items="{dropdownItems2}" search="true"></su-dropdown> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[1]} "> <pre><code class="prettyprint">&lt;su-dropdown items=&quot;\\{ dropdownItems \\}&quot; search=&quot;true&quot;&gt;&lt;/su-dropdown&gt;\n\n&lt;script&gt;\n  this.dropdownItems = [\n    \\{\n      label: &apos;State&apos;,\n      value: null,\n      default: true\n    \\},\n    \\{ value: &apos;AL&apos;, label: &apos;Alabama&apos; \\},\n    \\{ value: &apos;AK&apos;, label: &apos;Alaska&apos; \\},\n    \\{ value: &apos;AZ&apos;, label: &apos;Arizona&apos; \\},\n    \\{ value: &apos;AR&apos;, label: &apos;Arkansas&apos; \\},\n    \\{ value: &apos;CA&apos;, label: &apos;California&apos; \\},\n    \\{ value: &apos;CO&apos;, label: &apos;Colorado&apos; \\},\n    \\{ value: &apos;CT&apos;, label: &apos;Connecticut&apos; \\},\n    \\{ value: &apos;DE&apos;, label: &apos;Delaware&apos; \\},\n    \\{ value: &apos;DC&apos;, label: &apos;District Of Columbia&apos; \\},\n    \\{ value: &apos;FL&apos;, label: &apos;Florida&apos; \\},\n    \\{ value: &apos;GA&apos;, label: &apos;Georgia&apos; \\},\n    \\{ value: &apos;HI&apos;, label: &apos;Hawaii&apos; \\},\n    \\{ value: &apos;ID&apos;, label: &apos;Idaho&apos; \\},\n    \\{ value: &apos;IL&apos;, label: &apos;Illinois&apos; \\},\n    \\{ value: &apos;IN&apos;, label: &apos;Indiana&apos; \\},\n    \\{ value: &apos;IA&apos;, label: &apos;Iowa&apos; \\},\n    \\{ value: &apos;KS&apos;, label: &apos;Kansas&apos; \\},\n    \\{ value: &apos;KY&apos;, label: &apos;Kentucky&apos; \\},\n    \\{ value: &apos;LA&apos;, label: &apos;Louisiana&apos; \\},\n    \\{ value: &apos;ME&apos;, label: &apos;Maine&apos; \\},\n    \\{ value: &apos;MD&apos;, label: &apos;Maryland&apos; \\},\n    \\{ value: &apos;MA&apos;, label: &apos;Massachusetts&apos; \\},\n    \\{ value: &apos;MI&apos;, label: &apos;Michigan&apos; \\},\n    \\{ value: &apos;MN&apos;, label: &apos;Minnesota&apos; \\},\n    \\{ value: &apos;MS&apos;, label: &apos;Mississippi&apos; \\},\n    \\{ value: &apos;MO&apos;, label: &apos;Missouri&apos; \\},\n    \\{ value: &apos;MT&apos;, label: &apos;Montana&apos; \\},\n    \\{ value: &apos;NE&apos;, label: &apos;Nebraska&apos; \\},\n    \\{ value: &apos;NV&apos;, label: &apos;Nevada&apos; \\},\n    \\{ value: &apos;NH&apos;, label: &apos;New Hampshire&apos; \\},\n    \\{ value: &apos;NJ&apos;, label: &apos;New Jersey&apos; \\},\n    \\{ value: &apos;NM&apos;, label: &apos;New Mexico&apos; \\},\n    \\{ value: &apos;NY&apos;, label: &apos;New York&apos; \\},\n    \\{ value: &apos;NC&apos;, label: &apos;North Carolina&apos; \\},\n    \\{ value: &apos;ND&apos;, label: &apos;North Dakota&apos; \\},\n    \\{ value: &apos;OH&apos;, label: &apos;Ohio&apos; \\},\n    \\{ value: &apos;OK&apos;, label: &apos;Oklahoma&apos; \\},\n    \\{ value: &apos;OR&apos;, label: &apos;Oregon&apos; \\},\n    \\{ value: &apos;PA&apos;, label: &apos;Pennsylvania&apos; \\},\n    \\{ value: &apos;RI&apos;, label: &apos;Rhode Island&apos; \\},\n    \\{ value: &apos;SC&apos;, label: &apos;South Carolina&apos; \\},\n    \\{ value: &apos;SD&apos;, label: &apos;South Dakota&apos; \\},\n    \\{ value: &apos;TN&apos;, label: &apos;Tennessee&apos; \\},\n    \\{ value: &apos;TX&apos;, label: &apos;Texas&apos; \\},\n    \\{ value: &apos;UT&apos;, label: &apos;Utah&apos; \\},\n    \\{ value: &apos;VT&apos;, label: &apos;Vermont&apos; \\},\n    \\{ value: &apos;VA&apos;, label: &apos;Virginia&apos; \\},\n    \\{ value: &apos;WA&apos;, label: &apos;Washington&apos; \\},\n    \\{ value: &apos;WV&apos;, label: &apos;West Virginia&apos; \\},\n    \\{ value: &apos;WI&apos;, label: &apos;Wisconsin&apos; \\},\n    \\{ value: &apos;WY&apos;, label: &apos;Wyoming&apos; \\}\n  ]\n&lt;/script&gt;\n</code></pre> </div> <h3 class="ui header">Multiple Selection</h3> <p>A selection dropdown can allow multiple selections</p> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 7)}"></i> </div> <div class="ui segment {bottom: !example[7]} attached"> <su-dropdown items="{dropdownItems8}" multiple="true"></su-dropdown> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[7]} "> <pre><code class="prettyprint">&lt;su-dropdown items=&quot;\\{ dropdownItems \\}&quot; multiple=&quot;true&quot;&gt;&lt;/su-dropdown&gt;\n\n&lt;script&gt;\n  this.dropdownItems = [\n    \\{\n      label: &apos;Skills&apos;,\n      value: null,\n      default: true\n    \\},\n    \\{ value: &apos;angular&apos;, label: &apos;Angular&apos; \\},\n    \\{ value: &apos;css&apos;, label: &apos;CSS&apos; \\},\n    \\{ value: &apos;design&apos;, label: &apos;Graphic Design&apos; \\},\n    \\{ value: &apos;ember&apos;, label: &apos;Ember&apos; \\},\n    \\{ value: &apos;html&apos;, label: &apos;HTML&apos; \\},\n    \\{ value: &apos;ia&apos;, label: &apos;Information Architecture&apos; \\},\n    \\{ value: &apos;javascript&apos;, label: &apos;Javascript&apos; \\},\n    \\{ value: &apos;mech&apos;, label: &apos;Mechanical Engineering&apos; \\},\n    \\{ value: &apos;meteor&apos;, label: &apos;Meteor&apos; \\},\n    \\{ value: &apos;node&apos;, label: &apos;NodeJS&apos; \\},\n    \\{ value: &apos;plumbing&apos;, label: &apos;Plumbing&apos; \\},\n    \\{ value: &apos;python&apos;, label: &apos;Python&apos; \\},\n    \\{ value: &apos;rails&apos;, label: &apos;Rails&apos; \\},\n    \\{ value: &apos;react&apos;, label: &apos;React&apos; \\},\n    \\{ value: &apos;repair&apos;, label: &apos;Kitchen Repair&apos; \\},\n    \\{ value: &apos;ruby&apos;, label: &apos;Ruby&apos; \\},\n    \\{ value: &apos;ui&apos;, label: &apos;UI Design&apos; \\},\n    \\{ value: &apos;ux&apos;, label: &apos;User Experience&apos; \\}\n  ]\n&lt;/script&gt;\n</code></pre> </div> <h2 class="ui dividing header">Content<a class="anchor" id="content"></a></h2> <h3 class="ui header">Header</h3> <p>A dropdown menu can contain a header</p> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 2)}"></i> </div> <div class="ui segment {bottom: !example[2]} attached"> <su-dropdown items="{dropdownItems3}"></su-dropdown> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[2]} "> <pre><code class="prettyprint">&lt;su-dropdown items=&quot;\\{ dropdownItems \\}&quot;&gt;&lt;/su-dropdown&gt;\n\n&lt;script&gt;\n  this.dropdownItems = [\n    \\{\n      label: &apos;Filter&apos;,\n      value: null,\n      default: true\n    \\},\n    \\{\n      label: &apos;Filter by tag&apos;,\n      icon: &apos;tags&apos;,\n      header: true\n    \\},\n    \\{\n      label: &apos;Important&apos;,\n      value: 1\n    \\},\n    \\{\n      label: &apos;Announcement&apos;,\n      value: 2\n    \\},\n    \\{\n      label: &apos;Discussion&apos;,\n      value: 3\n    \\}\n  ]\n&lt;/script&gt;\n</code></pre> </div> <h3 class="ui header">Divider</h3> <p>A dropdown menu can contain dividers to separate related content</p> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 3)}"></i> </div> <div class="ui segment {bottom: !example[3]} attached"> <su-dropdown items="{dropdownItems4}"></su-dropdown> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[3]} "> <pre><code class="prettyprint">&lt;su-dropdown items=&quot;\\{ dropdownItems \\}&quot;&gt;&lt;/su-dropdown&gt;\n\n&lt;script&gt;\n  this.dropdownItems = [\n    \\{\n      label: &apos;Filter&apos;,\n      value: null,\n      default: true\n    \\},\n    \\{\n      label: &apos;Filter by tag&apos;,\n      icon: &apos;tags&apos;,\n      header: true\n    \\},\n    \\{\n      divider: true\n    \\},\n    \\{\n      label: &apos;Important&apos;,\n      value: 1\n    \\},\n    \\{\n      label: &apos;Announcement&apos;,\n      value: 2\n    \\},\n    \\{\n      label: &apos;Discussion&apos;,\n      value: 3\n    \\}\n  ]\n&lt;/script&gt;\n</code></pre> </div> <h3 class="ui header">Icon</h3> <p>A dropdown menu can contain an <a href="https://semantic-ui.com/elements/icon.html">icon</a>.</p> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 4)}"></i> </div> <div class="ui segment {bottom: !example[4]} attached"> <su-dropdown items="{dropdownItems5}"></su-dropdown> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[4]} "> <pre><code class="prettyprint">&lt;su-dropdown items=&quot;\\{ dropdownItems \\}&quot;&gt;&lt;/su-dropdown&gt;\n\n&lt;script&gt;\n  this.dropdownItems = [\n    \\{\n      label: &apos;Filter&apos;,\n      value: null,\n      default: true\n    \\},\n    \\{\n      label: &apos;Filter by tag&apos;,\n      icon: &apos;tags&apos;,\n      header: true\n    \\},\n    \\{\n      divider: true\n    \\},\n    \\{\n      label: &apos;Important&apos;,\n      icon: &apos;attention&apos;,\n      value: 1\n    \\},\n    \\{\n      label: &apos;Announcement&apos;,\n      icon: &apos;comment&apos;,\n      value: 2\n    \\},\n    \\{\n      label: &apos;Discussion&apos;,\n      icon: &apos;conversation&apos;,\n      value: 3\n    \\}\n  ]\n&lt;/script&gt;\n</code></pre> </div> <h3 class="ui header">Description</h3> <p>A dropdown menu can contain a description.</p> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 5)}"></i> </div> <div class="ui segment {bottom: !example[5]} attached"> <su-dropdown items="{dropdownItems6}"></su-dropdown> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[5]} "> <pre><code class="prettyprint">&lt;su-dropdown items=&quot;\\{ dropdownItems \\}&quot;&gt;&lt;/su-dropdown&gt;\n\n&lt;script&gt;\n  this.dropdownItems = [\n    \\{\n      label: &apos;Filter Tags&apos;,\n      value: null,\n      default: true\n    \\},\n    \\{\n      label: &apos;Filter by tag&apos;,\n      header: true\n    \\},\n    \\{\n      divider: true\n    \\},\n    \\{\n      label: &apos;Important&apos;,\n      description: &apos;2 new&apos;,\n      value: 1\n    \\},\n    \\{\n      label: &apos;Hopper&apos;,\n      description: &apos;10 new&apos;,\n      value: 2\n    \\},\n    \\{\n      label: &apos;Discussion&apos;,\n      description: &apos;5 new&apos;,\n      value: 3\n    \\}\n  ]\n&lt;/script&gt;\n</code></pre> </div> <h3 class="ui header">Image</h3> <p>A dropdown menu can contain an image.</p> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 6)}"></i> </div> <div class="ui segment {bottom: !example[6]} attached"> <su-dropdown items="{dropdownItems7}"></su-dropdown> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[6]} "> <pre><code class="prettyprint">&lt;su-dropdown items=&quot;\\{ dropdownItems \\}&quot;&gt;&lt;/su-dropdown&gt;\n\n&lt;script&gt;\n  this.dropdownItems = [\n    \\{\n      label: &apos;Add User&apos;,\n      value: null,\n      default: true\n    \\},\n    \\{\n      label: &apos;People You Might Know&apos;,\n      header: true\n    \\},\n    \\{\n      label: &apos;Jenny Hess&apos;,\n      image: &apos;./images/avatar/small/jenny.jpg&apos;,\n      value: &apos;jenny&apos;\n    \\},\n    \\{\n      label: &apos;Elliot Fu&apos;,\n      image: &apos;./images/avatar/small/elliot.jpg&apos;,\n      value: &apos;elliot&apos;\n    \\},\n    \\{\n      label: &apos;Stevie Feliciano&apos;,\n      image: &apos;./images/avatar/small/stevie.jpg&apos;,\n      value: &apos;stevie&apos;\n    \\},\n    \\{\n      label: &apos;Your Friends\\&apos; Friends&apos;,\n      header: true\n    \\},\n    \\{\n      label: &apos;Christian&apos;,\n      image: &apos;./images/avatar/small/christian.jpg&apos;,\n      value: &apos;christian&apos;\n    \\},\n    \\{\n      label: &apos;Matt&apos;,\n      image: &apos;./images/avatar/small/matt.jpg&apos;,\n      value: &apos;matt&apos;\n    \\},\n    \\{\n      label: &apos;Justen Kitsune&apos;,\n      image: &apos;./images/avatar/small/justen.jpg&apos;,\n      value: &apos;justen&apos;\n    \\}\n  ]\n&lt;/script&gt;\n</code></pre> </div> <h2 class="ui dividing header">Named elements<a class="anchor" id="event"></a></h2> <h3 class="ui header">Single Selection</h3> <p>Access to single selection with ref attribute</p> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 9)}"></i> </div> <div class="ui segment {bottom: !example[9]} attached"> <su-dropdown items="{dropdownItems10}" ref="dropdown1"></su-dropdown> <div class="ui message"> <div class="header"> Selected value </div> <p>value: {refs.dropdown1.value}</p> <p>label: {refs.dropdown1.label}</p> </div> <button type="button" click="{setRefValue.bind(this, null)}" class="ui button">Select Default</button> <button type="button" click="{setRefValue.bind(this, 1)}" class="ui button">Select Male</button> <button type="button" click="{setRefValue.bind(this, 2)}" class="ui button">Select Female</button> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[9]} "> <pre><code class="prettyprint">&lt;su-dropdown items=&quot;\\{ dropdownItems \\}&quot; ref=&quot;dropdown1&quot;&gt;&lt;/su-dropdown&gt;\n\n&lt;div class=&quot;ui message&quot;&gt;\n  &lt;div class=&quot;header&quot;&gt;\n    Selected value\n  &lt;/div&gt;\n  &lt;p&gt;value: \\{ refs.dropdown1.value \\}&lt;/p&gt;\n  &lt;p&gt;label: \\{ refs.dropdown1.label \\}&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;button type=&quot;button&quot; click=&quot;\\{ setRefValue.bind(this, null) \\}&quot; class=&quot;ui button&quot;&gt;Select Default&lt;/button&gt;\n&lt;button type=&quot;button&quot; click=&quot;\\{ setRefValue.bind(this, 1) \\}&quot; class=&quot;ui button&quot;&gt;Select Male&lt;/button&gt;\n&lt;button type=&quot;button&quot; click=&quot;\\{ setRefValue.bind(this, 2) \\}&quot; class=&quot;ui button&quot;&gt;Select Female&lt;/button&gt;\n\n&lt;script&gt;\n  this.dropdownItems = [\n    \\{\n      label: &apos;Gender&apos;,\n      value: null,\n      default: true\n    \\},\n    \\{\n      label: &apos;Male&apos;,\n      value: 1\n    \\},\n    \\{\n      label: &apos;Female&apos;,\n      value: 2\n    \\},\n  ]\n\n  this.setRefValue = value =&gt; \\{\n    this.refs.dropdown1.value = value\n  \\}\n&lt;/script&gt;\n</code></pre> </div> <h3 class="ui header">Multi Selection</h3> <p>Access to multi selection with ref attribute</p> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 10)}"></i> </div> <div class="ui segment {bottom: !example[10]} attached"> <su-dropdown items="{dropdownItems11}" ref="dropdown2" multiple="true"></su-dropdown> <div class="ui message"> <div class="header"> Selected value </div> <p>value: {refs.dropdown2.value}</p> </div> <button type="button" click="{setMultiRefValue.bind(this, null)}" class="ui button">Select Default</button> <button type="button" click="{setMultiRefValue.bind(this, [\'angular\', \'css\'])}" class="ui button">Select Male</button> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[10]} "> <pre><code class="prettyprint">&lt;su-dropdown items=&quot;\\{ dropdownItems \\}&quot; ref=&quot;dropdown2&quot; multiple=&quot;true&quot;&gt;&lt;/su-dropdown&gt;\n\n&lt;div class=&quot;ui message&quot;&gt;\n  &lt;div class=&quot;header&quot;&gt;\n    Selected value\n  &lt;/div&gt;\n  &lt;p&gt;value: \\{ refs.dropdown2.value \\}&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;button type=&quot;button&quot; click=&quot;\\{ setMultiRefValue.bind(this, null) \\}&quot; class=&quot;ui button&quot;&gt;Select Default&lt;/button&gt;\n&lt;button type=&quot;button&quot; click=&quot;\\{ setMultiRefValue.bind(this, []) \\}&quot; class=&quot;ui button&quot;&gt;Select Male&lt;/button&gt;\n\n&lt;script&gt;\n  this.dropdownItems = [\n    \\{\n      label: &apos;Skills&apos;,\n      value: null,\n      default: true\n    \\},\n    \\{ value: &apos;angular&apos;, label: &apos;Angular&apos; \\},\n    \\{ value: &apos;css&apos;, label: &apos;CSS&apos; \\},\n    \\{ value: &apos;design&apos;, label: &apos;Graphic Design&apos; \\},\n    \\{ value: &apos;ember&apos;, label: &apos;Ember&apos; \\},\n    \\{ value: &apos;html&apos;, label: &apos;HTML&apos; \\},\n    \\{ value: &apos;ia&apos;, label: &apos;Information Architecture&apos; \\},\n    \\{ value: &apos;javascript&apos;, label: &apos;Javascript&apos; \\},\n    \\{ value: &apos;mech&apos;, label: &apos;Mechanical Engineering&apos; \\},\n    \\{ value: &apos;meteor&apos;, label: &apos;Meteor&apos; \\},\n    \\{ value: &apos;node&apos;, label: &apos;NodeJS&apos; \\},\n    \\{ value: &apos;plumbing&apos;, label: &apos;Plumbing&apos; \\},\n    \\{ value: &apos;python&apos;, label: &apos;Python&apos; \\},\n    \\{ value: &apos;rails&apos;, label: &apos;Rails&apos; \\},\n    \\{ value: &apos;react&apos;, label: &apos;React&apos; \\},\n    \\{ value: &apos;repair&apos;, label: &apos;Kitchen Repair&apos; \\},\n    \\{ value: &apos;ruby&apos;, label: &apos;Ruby&apos; \\},\n    \\{ value: &apos;ui&apos;, label: &apos;UI Design&apos; \\},\n    \\{ value: &apos;ux&apos;, label: &apos;User Experience&apos; \\}\n  ]\n\n  this.setRefValue = value =&gt; \\{\n    this.refs.dropdown1.value = value\n  \\}\n&lt;/script&gt;\n</code></pre> </div>', "", "", function (a) {
  "use strict";
  var e = this;this.example = [], this.toggleExample = function (a) {
    e.example[a] = !e.example[a];
  }, this.dropdownItems = [{ label: "Gender", value: null, default: !0 }, { label: "Male", value: 1 }, { label: "Female", value: 2 }], this.dropdownItems2 = [{ label: "State", value: null, default: !0 }, { value: "AL", label: "Alabama" }, { value: "AK", label: "Alaska" }, { value: "AZ", label: "Arizona" }, { value: "AR", label: "Arkansas" }, { value: "CA", label: "California" }, { value: "CO", label: "Colorado" }, { value: "CT", label: "Connecticut" }, { value: "DE", label: "Delaware" }, { value: "DC", label: "District Of Columbia" }, { value: "FL", label: "Florida" }, { value: "GA", label: "Georgia" }, { value: "HI", label: "Hawaii" }, { value: "ID", label: "Idaho" }, { value: "IL", label: "Illinois" }, { value: "IN", label: "Indiana" }, { value: "IA", label: "Iowa" }, { value: "KS", label: "Kansas" }, { value: "KY", label: "Kentucky" }, { value: "LA", label: "Louisiana" }, { value: "ME", label: "Maine" }, { value: "MD", label: "Maryland" }, { value: "MA", label: "Massachusetts" }, { value: "MI", label: "Michigan" }, { value: "MN", label: "Minnesota" }, { value: "MS", label: "Mississippi" }, { value: "MO", label: "Missouri" }, { value: "MT", label: "Montana" }, { value: "NE", label: "Nebraska" }, { value: "NV", label: "Nevada" }, { value: "NH", label: "New Hampshire" }, { value: "NJ", label: "New Jersey" }, { value: "NM", label: "New Mexico" }, { value: "NY", label: "New York" }, { value: "NC", label: "North Carolina" }, { value: "ND", label: "North Dakota" }, { value: "OH", label: "Ohio" }, { value: "OK", label: "Oklahoma" }, { value: "OR", label: "Oregon" }, { value: "PA", label: "Pennsylvania" }, { value: "RI", label: "Rhode Island" }, { value: "SC", label: "South Carolina" }, { value: "SD", label: "South Dakota" }, { value: "TN", label: "Tennessee" }, { value: "TX", label: "Texas" }, { value: "UT", label: "Utah" }, { value: "VT", label: "Vermont" }, { value: "VA", label: "Virginia" }, { value: "WA", label: "Washington" }, { value: "WV", label: "West Virginia" }, { value: "WI", label: "Wisconsin" }, { value: "WY", label: "Wyoming" }], this.dropdownItems3 = [{ label: "Filter", value: null, default: !0 }, { label: "Filter by tag", icon: "tags", header: !0 }, { label: "Important", value: 1 }, { label: "Announcement", value: 2 }, { label: "Discussion", value: 3 }], this.dropdownItems4 = [{ label: "Filter", value: null, default: !0 }, { label: "Filter by tag", icon: "tags", header: !0 }, { divider: !0 }, { label: "Important", value: 1 }, { label: "Announcement", value: 2 }, { label: "Discussion", value: 3 }], this.dropdownItems5 = [{ label: "Filter", value: null, default: !0 }, { label: "Filter by tag", icon: "tags", header: !0 }, { divider: !0 }, { label: "Important", icon: "attention", value: 1 }, { label: "Announcement", icon: "comment", value: 2 }, { label: "Discussion", icon: "conversation", value: 3 }], this.dropdownItems6 = [{ label: "Filter Tags", value: null, default: !0 }, { label: "Filter by tag", header: !0 }, { divider: !0 }, { label: "Important", description: "2 new", value: 1 }, { label: "Hopper", description: "10 new", value: 2 }, { label: "Discussion", description: "5 new", value: 3 }], this.dropdownItems7 = [{ label: "Add User", value: null, default: !0 }, { label: "People You Might Know", header: !0 }, { label: "Jenny Hess", image: "./images/avatar/small/jenny.jpg", value: "jenny" }, { label: "Elliot Fu", image: "./images/avatar/small/elliot.jpg", value: "elliot" }, { label: "Stevie Feliciano", image: "./images/avatar/small/stevie.jpg", value: "stevie" }, { label: "Your Friends' Friends", header: !0 }, { label: "Christian", image: "./images/avatar/small/christian.jpg", value: "christian" }, { label: "Matt", image: "./images/avatar/small/matt.jpg", value: "matt" }, { label: "Justen Kitsune", image: "./images/avatar/small/justen.jpg", value: "justen" }], this.dropdownItems8 = [{ label: "Skills", value: null, default: !0 }, { value: "angular", label: "Angular" }, { value: "css", label: "CSS" }, { value: "design", label: "Graphic Design" }, { value: "ember", label: "Ember" }, { value: "html", label: "HTML" }, { value: "ia", label: "Information Architecture" }, { value: "javascript", label: "Javascript" }, { value: "mech", label: "Mechanical Engineering" }, { value: "meteor", label: "Meteor" }, { value: "node", label: "NodeJS" }, { value: "plumbing", label: "Plumbing" }, { value: "python", label: "Python" }, { value: "rails", label: "Rails" }, { value: "react", label: "React" }, { value: "repair", label: "Kitchen Repair" }, { value: "ruby", label: "Ruby" }, { value: "ui", label: "UI Design" }, { value: "ux", label: "User Experience" }], this.dropdownItems9 = [{ label: "Select Friend", value: null, default: !0 }, { label: "Jenny Hess", image: "./images/avatar/small/jenny.jpg", value: "jenny" }, { label: "Elliot Fu", image: "./images/avatar/small/elliot.jpg", value: "elliot" }, { label: "Stevie Feliciano", image: "./images/avatar/small/stevie.jpg", value: "stevie" }, { label: "Christian", image: "./images/avatar/small/christian.jpg", value: "christian" }, { label: "Matt", image: "./images/avatar/small/matt.jpg", value: "matt" }, { label: "Justen Kitsune", image: "./images/avatar/small/justen.jpg", value: "justen" }], this.dropdownItems10 = [{ label: "Gender", value: null, default: !0 }, { label: "Male", value: 1 }, { label: "Female", value: 2 }], this.dropdownItems11 = [{ label: "Skills", value: null, default: !0 }, { value: "angular", label: "Angular" }, { value: "css", label: "CSS" }, { value: "design", label: "Graphic Design" }, { value: "ember", label: "Ember" }, { value: "html", label: "HTML" }, { value: "ia", label: "Information Architecture" }, { value: "javascript", label: "Javascript" }, { value: "mech", label: "Mechanical Engineering" }, { value: "meteor", label: "Meteor" }, { value: "node", label: "NodeJS" }, { value: "plumbing", label: "Plumbing" }, { value: "python", label: "Python" }, { value: "rails", label: "Rails" }, { value: "react", label: "React" }, { value: "repair", label: "Kitchen Repair" }, { value: "ruby", label: "Ruby" }, { value: "ui", label: "UI Design" }, { value: "ux", label: "User Experience" }], this.setRefValue = function (a) {
    e.refs.dropdown1.value = a;
  }, this.setMultiRefValue = function (a) {
    e.refs.dropdown2.value = a, e.update();
  }, this.on("mount", function () {
    PR.prettyPrint(!1);
  });
}), riot.tag2("demo-modal", '<h1 class="ui header"> Modal <div class="sub header">A modal displays content that temporarily blocks interactions with the main view of a site</div> </h1> <h2 class="ui dividing header">Types<a class="anchor" id="types"></a></h2> <h3 class="ui header">Modal</h3> <p>A standard modal</p> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 0)}"></i> </div> <div class="ui segment {bottom: !example[0]} attached"> <su-modal modal="{modal}" class="large"> <div class="ui medium image"> <img src="./images/avatar2/large/rachel.png"> </div> <div class="description"> <div class="ui header">Default Profile Image</div> <p>We\'ve found the following <a href="https://www.gravatar.com" target="_blank">gravatar</a> image associated with your e-mail address.</p> <p>Is it okay to use this photo?</p> </div> </su-modal> <button class="ui button" onclick="{showModal}">Show modal</button> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[0]}"> <pre><code class="prettyprint">&lt;su-modal modal=&quot;\\{ modal \\}&quot; class=&quot;large&quot;&gt;\n  &lt;div class=&quot;ui medium image&quot;&gt;\n    &lt;img src=&quot;./images/avatar2/large/rachel.png&quot; /&gt;\n  &lt;/div&gt;\n  &lt;div class=&quot;description&quot;&gt;\n    &lt;div class=&quot;ui header&quot;&gt;Default Profile Image&lt;/div&gt;\n    &lt;p&gt;We&apos;ve found the following &lt;a href=&quot;https://www.gravatar.com&quot; target=&quot;_blank&quot;&gt;gravatar&lt;/a&gt; image associated with your\n      e-mail address.&lt;/p&gt;\n    &lt;p&gt;Is it okay to use this photo?&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/su-modal&gt;\n&lt;button class=&quot;ui button&quot; onclick=&quot;\\{ showModal \\}&quot;&gt;Show modal&lt;/button&gt;\n\n&lt;script&gt;\n  this.modal = \\{\n    visible: false,\n    heading: &apos;Select a Photo&apos;,\n    content_class: &apos;image&apos;,\n    buttons: [\\{\n      text: &apos;Ok&apos;,\n      type: &apos;primary&apos;,\n      icon: &apos;checkmark&apos;\n    \\}, \\{\n      text: &apos;Canel&apos;\n    \\}]\n  \\}\n\n  this.showModal = () =&gt; \\{\n    this.modal.visible = true\n  \\}\n&lt;/script&gt;\n</code></pre> </div> <h3 class="ui header">Basic</h3> <p>A modal can reduce its complexity</p> <div class="ui segment secondary top attached example"> Example <i class="icon code" onclick="{toggleExample.bind(this, 1)}"></i> </div> <div class="ui segment {bottom: !example[1]} attached"> <su-modal modal="{modal_basic}" class="basic"> Your inbox is getting full, would you like us to enable automatic archiving of old messages? </su-modal> <button class="ui button" onclick="{showModalBasic}">Show modal</button> </div> <div class="ui segment bottom attached inverted transition {hidden: !example[1]}"> <pre><code class="prettyprint">&lt;su-modal modal=&quot;\\{ modal \\}&quot; class=&quot;basic&quot;&gt;\n  Your inbox is getting full, would you like us to enable automatic archiving of old messages?\n&lt;/su-modal&gt;\n&lt;button class=&quot;ui button&quot; onclick=&quot;\\{ showModalBasic \\}&quot;&gt;Show modal&lt;/button&gt;\n\n&lt;script&gt;\n  this.modal = \\{\n    visible: false,\n    heading: \\{\n      text: &apos;Archive Old Messages&apos;,\n      icon: &apos;archive&apos;\n    \\},\n    buttons: [\\{\n      text: &apos;No&apos;\n    \\}, \\{\n      text: &apos;Yes&apos;,\n      type: &apos;green&apos;,\n      icon: &apos;checkmark&apos;\n    \\}]\n  \\}\n\n  this.showModalBasic = () =&gt; \\{\n    this.modal.visible = true\n  \\}\n&lt;/script&gt;\n</code></pre> </div>', "", "", function (a) {
  "use strict";
  var e = this;this.example = [], this.toggleExample = function (a) {
    e.example[a] = !e.example[a];
  }, this.modal = { visible: !1, heading: "Select a Photo", size: "large", content_class: "image", buttons: [{ text: "Ok", type: "primary", icon: "checkmark" }, { text: "Canel" }] }, this.showModal = function () {
    e.modal.visible = !0;
  }, this.modal_basic = { visible: !1, heading: { text: "Archive Old Messages", icon: "archive" }, buttons: [{ text: "No" }, { text: "Yes", type: "green", icon: "checkmark" }] }, this.showModalBasic = function () {
    e.modal_basic.visible = !0;
  }, this.on("mount", function () {
    PR.prettyPrint(!1);
  });
}), riot.tag2("root", '<h1 class="ui header"> Semantic UI Riot <div class="sub header">Semantic-UI-Riot integration.</div> </h1> <h2 class="ui dividing header" id="introduction">Introduction</h2> <p> Semantic UI Riot is Riot integration for <a href="https://semantic-ui.com/">Semantic UI</a>. </p>', "", "", function (a) {}), riot.tag2("navigation", '<div class="ui inverted vertical left fixed menu"> <div class="item"> <strong>Semantic UI Riot <small><em>{version}</em></small> </strong> </div> <div class="item"> <div class="header">Getting Started</div> <div class="menu"> <a class="item" href="#">Introduction</a> <a href="https://github.com/black-trooper/semantic-ui-riot" class="item"> <i aria-hidden="true" class="github icon"></i> GitHub </a> </div> </div> <div class="item"> <div class="header">Module</div> <div class="menu"> <a class="item" href="#demo-checkbox">Checkbox</a> <a class="item" href="#demo-dropdown">Dropdown</a> <a class="item" href="#demo-modal">Modal</a> </div> </div> </div>', "", "", function (a) {
  "use strict";
  this.version = require("../package.json").version;
});

},{"../package.json":2}],2:[function(require,module,exports){
module.exports={
  "name": "semantic-ui-riot",
  "version": "0.0.22",
  "description": "Semantic UI for Riot",
  "main": "dist/semantic-ui-riot.min.js",
  "files": [
    "dist"
  ],
  "scripts": {
    "start": "gulp",
    "test": "karma start"
  },
  "keywords": [
    "riotjs",
    "riot",
    "semantic",
    "semanticui"
  ],
  "author": {
    "name": "black-trooper",
    "url": "https://github.com/black-trooper/semantic-ui-riot/"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/black-trooper/semantic-ui-riot/issues"
  },
  "dependencies": {
    "riot": "^3.6.1"
  },
  "devDependencies": {
    "babel": "^6.23.0",
    "babel-core": "^6.25.0",
    "babel-preset-es2015-riot": "^1.1.0",
    "babelify": "^7.3.0",
    "browserify": "^14.4.0",
    "chai": "^4.1.2",
    "eslint-plugin-html": "^3.1.1",
    "gulp": "^3.9.1",
    "gulp-babel": "^7.0.0",
    "gulp-concat": "^2.6.1",
    "gulp-eslint": "^4.0.0",
    "gulp-htmlhint": "^0.3.1",
    "gulp-natural-sort": "^0.1.1",
    "gulp-plumber": "^1.1.0",
    "gulp-rename": "^1.2.2",
    "gulp-riot": "^1.1.1",
    "gulp-uglify": "^3.0.0",
    "gulp-webserver-fast": "^0.9.1",
    "jquery": "2.2.2",
    "karma": "^1.7.1",
    "karma-babel-preprocessor": "^7.0.0",
    "karma-chrome-launcher": "^2.2.0",
    "karma-coverage": "^1.1.1",
    "karma-coveralls": "^1.1.2",
    "karma-mocha": "^1.3.0",
    "karma-mocha-reporter": "^2.2.4",
    "karma-riot": "^2.0.0",
    "karma-sinon-chai": "^1.3.2",
    "map-stream": "0.0.7",
    "mocha": "^4.0.1",
    "riot-route": "^3.1.1",
    "run-sequence": "^2.0.0",
    "sinon": "^2.1.0",
    "sinon-chai": "^2.13.0",
    "uglify-js": "^3.0.25",
    "vinyl-source-stream": "^1.1.0"
  }
}

},{}]},{},[1]);
